
Scalak_State_Machine.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001ce2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c6e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000bb  00800100  00800100  00001ce2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001ce2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d14  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  00001d54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002f6d  00000000  00000000  00001fe4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001079  00000000  00000000  00004f51  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001880  00000000  00000000  00005fca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000085c  00000000  00000000  0000784c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c6a  00000000  00000000  000080a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000292e  00000000  00000000  00008d12  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002b0  00000000  00000000  0000b640  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4b 00 	jmp	0x96	; 0x96 <__ctors_end>
       4:	0c 94 a9 09 	jmp	0x1352	; 0x1352 <__vector_1>
       8:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
       c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      10:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      14:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      18:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      1c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      20:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      24:	0c 94 cd 09 	jmp	0x139a	; 0x139a <__vector_9>
      28:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      2c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      30:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      34:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      38:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      3c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      40:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      44:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      48:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      4c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      50:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      54:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      58:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      5c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      60:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      64:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 00       	.word	0x003f	; ????

00000096 <__ctors_end>:
      96:	11 24       	eor	r1, r1
      98:	1f be       	out	0x3f, r1	; 63
      9a:	cf ef       	ldi	r28, 0xFF	; 255
      9c:	d8 e0       	ldi	r29, 0x08	; 8
      9e:	de bf       	out	0x3e, r29	; 62
      a0:	cd bf       	out	0x3d, r28	; 61

000000a2 <__do_copy_data>:
      a2:	11 e0       	ldi	r17, 0x01	; 1
      a4:	a0 e0       	ldi	r26, 0x00	; 0
      a6:	b1 e0       	ldi	r27, 0x01	; 1
      a8:	ee e6       	ldi	r30, 0x6E	; 110
      aa:	fc e1       	ldi	r31, 0x1C	; 28
      ac:	02 c0       	rjmp	.+4      	; 0xb2 <__do_copy_data+0x10>
      ae:	05 90       	lpm	r0, Z+
      b0:	0d 92       	st	X+, r0
      b2:	a0 30       	cpi	r26, 0x00	; 0
      b4:	b1 07       	cpc	r27, r17
      b6:	d9 f7       	brne	.-10     	; 0xae <__do_copy_data+0xc>

000000b8 <__do_clear_bss>:
      b8:	21 e0       	ldi	r18, 0x01	; 1
      ba:	a0 e0       	ldi	r26, 0x00	; 0
      bc:	b1 e0       	ldi	r27, 0x01	; 1
      be:	01 c0       	rjmp	.+2      	; 0xc2 <.do_clear_bss_start>

000000c0 <.do_clear_bss_loop>:
      c0:	1d 92       	st	X+, r1

000000c2 <.do_clear_bss_start>:
      c2:	ab 3b       	cpi	r26, 0xBB	; 187
      c4:	b2 07       	cpc	r27, r18
      c6:	e1 f7       	brne	.-8      	; 0xc0 <.do_clear_bss_loop>
      c8:	0e 94 43 04 	call	0x886	; 0x886 <main>
      cc:	0c 94 35 0e 	jmp	0x1c6a	; 0x1c6a <_exit>

000000d0 <__bad_interrupt>:
      d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d4 <set_tactics_state>:
	}
	if(button_get_state() && !button_last_state) {
		set_program_state(PROGRAM_STATE_POWER_ON);
	}
	
	button_last_state = button_get_state();
      d4:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <enemy_follow_counter+0x1>
      d8:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <enemy_follow_counter>
      dc:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <current_tactics_state>
      e0:	68 2f       	mov	r22, r24
      e2:	8c e0       	ldi	r24, 0x0C	; 12
      e4:	0e 94 0d 07 	call	0xe1a	; 0xe1a <eeprom_write>
      e8:	08 95       	ret

000000ea <update_tactics_state>:
      ea:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <current_tactics_state>
      ee:	22 30       	cpi	r18, 0x02	; 2
      f0:	69 f0       	breq	.+26     	; 0x10c <update_tactics_state+0x22>
      f2:	18 f4       	brcc	.+6      	; 0xfa <update_tactics_state+0x10>
      f4:	21 30       	cpi	r18, 0x01	; 1
      f6:	31 f0       	breq	.+12     	; 0x104 <update_tactics_state+0x1a>
      f8:	38 c0       	rjmp	.+112    	; 0x16a <update_tactics_state+0x80>
      fa:	23 30       	cpi	r18, 0x03	; 3
      fc:	89 f0       	breq	.+34     	; 0x120 <update_tactics_state+0x36>
      fe:	24 30       	cpi	r18, 0x04	; 4
     100:	51 f1       	breq	.+84     	; 0x156 <update_tactics_state+0x6c>
     102:	33 c0       	rjmp	.+102    	; 0x16a <update_tactics_state+0x80>
     104:	83 e0       	ldi	r24, 0x03	; 3
     106:	0e 94 6a 00 	call	0xd4	; 0xd4 <set_tactics_state>
     10a:	08 95       	ret
     10c:	9b 01       	movw	r18, r22
     10e:	ac 01       	movw	r20, r24
     110:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__unordsf2>
     114:	88 23       	and	r24, r24
     116:	61 f1       	breq	.+88     	; 0x170 <update_tactics_state+0x86>
     118:	83 e0       	ldi	r24, 0x03	; 3
     11a:	0e 94 6a 00 	call	0xd4	; 0xd4 <set_tactics_state>
     11e:	08 95       	ret
     120:	9b 01       	movw	r18, r22
     122:	ac 01       	movw	r20, r24
     124:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__unordsf2>
     128:	81 11       	cpse	r24, r1
     12a:	04 c0       	rjmp	.+8      	; 0x134 <update_tactics_state+0x4a>
     12c:	82 e0       	ldi	r24, 0x02	; 2
     12e:	0e 94 6a 00 	call	0xd4	; 0xd4 <set_tactics_state>
     132:	08 95       	ret
     134:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <enemy_follow_counter>
     138:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <enemy_follow_counter+0x1>
     13c:	84 36       	cpi	r24, 0x64	; 100
     13e:	91 05       	cpc	r25, r1
     140:	30 f4       	brcc	.+12     	; 0x14e <update_tactics_state+0x64>
     142:	01 96       	adiw	r24, 0x01	; 1
     144:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <enemy_follow_counter+0x1>
     148:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <enemy_follow_counter>
     14c:	08 95       	ret
     14e:	84 e0       	ldi	r24, 0x04	; 4
     150:	0e 94 6a 00 	call	0xd4	; 0xd4 <set_tactics_state>
     154:	08 95       	ret
     156:	9b 01       	movw	r18, r22
     158:	ac 01       	movw	r20, r24
     15a:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__unordsf2>
     15e:	81 11       	cpse	r24, r1
     160:	07 c0       	rjmp	.+14     	; 0x170 <update_tactics_state+0x86>
     162:	82 e0       	ldi	r24, 0x02	; 2
     164:	0e 94 6a 00 	call	0xd4	; 0xd4 <set_tactics_state>
     168:	08 95       	ret
     16a:	81 e0       	ldi	r24, 0x01	; 1
     16c:	0e 94 6a 00 	call	0xd4	; 0xd4 <set_tactics_state>
     170:	08 95       	ret

00000172 <main_program>:
     172:	cf 92       	push	r12
     174:	df 92       	push	r13
     176:	ef 92       	push	r14
     178:	ff 92       	push	r15
     17a:	0f 93       	push	r16
     17c:	1f 93       	push	r17
     17e:	cf 93       	push	r28
     180:	df 93       	push	r29
     182:	00 d0       	rcall	.+0      	; 0x184 <main_program+0x12>
     184:	cd b7       	in	r28, 0x3d	; 61
     186:	de b7       	in	r29, 0x3e	; 62
     188:	0e 94 26 06 	call	0xc4c	; 0xc4c <ir38khz_get_error>
     18c:	6b 01       	movw	r12, r22
     18e:	7c 01       	movw	r14, r24
     190:	80 e0       	ldi	r24, 0x00	; 0
     192:	0e 94 89 06 	call	0xd12	; 0xd12 <qtr1a_get_state>
     196:	89 83       	std	Y+1, r24	; 0x01
     198:	81 e0       	ldi	r24, 0x01	; 1
     19a:	0e 94 89 06 	call	0xd12	; 0xd12 <qtr1a_get_state>
     19e:	8a 83       	std	Y+2, r24	; 0x02
     1a0:	ae 01       	movw	r20, r28
     1a2:	4f 5f       	subi	r20, 0xFF	; 255
     1a4:	5f 4f       	sbci	r21, 0xFF	; 255
     1a6:	c7 01       	movw	r24, r14
     1a8:	b6 01       	movw	r22, r12
     1aa:	0e 94 75 00 	call	0xea	; 0xea <update_tactics_state>
     1ae:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <current_tactics_state>
     1b2:	82 30       	cpi	r24, 0x02	; 2
     1b4:	a1 f0       	breq	.+40     	; 0x1de <main_program+0x6c>
     1b6:	18 f4       	brcc	.+6      	; 0x1be <main_program+0x4c>
     1b8:	81 30       	cpi	r24, 0x01	; 1
     1ba:	41 f0       	breq	.+16     	; 0x1cc <main_program+0x5a>
     1bc:	ef c0       	rjmp	.+478    	; 0x39c <main_program+0x22a>
     1be:	83 30       	cpi	r24, 0x03	; 3
     1c0:	09 f4       	brne	.+2      	; 0x1c4 <main_program+0x52>
     1c2:	42 c0       	rjmp	.+132    	; 0x248 <main_program+0xd6>
     1c4:	84 30       	cpi	r24, 0x04	; 4
     1c6:	09 f4       	brne	.+2      	; 0x1ca <main_program+0x58>
     1c8:	6f c0       	rjmp	.+222    	; 0x2a8 <main_program+0x136>
     1ca:	e8 c0       	rjmp	.+464    	; 0x39c <main_program+0x22a>
     1cc:	0e 94 00 07 	call	0xe00	; 0xe00 <switch_get_state>
     1d0:	91 e0       	ldi	r25, 0x01	; 1
     1d2:	81 11       	cpse	r24, r1
     1d4:	01 c0       	rjmp	.+2      	; 0x1d8 <main_program+0x66>
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <last_enemy_direction>
     1dc:	df c0       	rjmp	.+446    	; 0x39c <main_program+0x22a>
     1de:	11 e0       	ldi	r17, 0x01	; 1
     1e0:	20 e0       	ldi	r18, 0x00	; 0
     1e2:	30 e0       	ldi	r19, 0x00	; 0
     1e4:	a9 01       	movw	r20, r18
     1e6:	c7 01       	movw	r24, r14
     1e8:	b6 01       	movw	r22, r12
     1ea:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__gesf2>
     1ee:	18 16       	cp	r1, r24
     1f0:	0c f0       	brlt	.+2      	; 0x1f4 <main_program+0x82>
     1f2:	10 e0       	ldi	r17, 0x00	; 0
     1f4:	10 93 58 01 	sts	0x0158, r17	; 0x800158 <last_enemy_direction>
     1f8:	00 e0       	ldi	r16, 0x00	; 0
     1fa:	10 e0       	ldi	r17, 0x00	; 0
     1fc:	98 01       	movw	r18, r16
     1fe:	b7 01       	movw	r22, r14
     200:	a6 01       	movw	r20, r12
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <pid_calculate>
     208:	6b 01       	movw	r12, r22
     20a:	7c 01       	movw	r14, r24
     20c:	20 e0       	ldi	r18, 0x00	; 0
     20e:	30 e0       	ldi	r19, 0x00	; 0
     210:	4f e7       	ldi	r20, 0x7F	; 127
     212:	53 e4       	ldi	r21, 0x43	; 67
     214:	0e 94 bd 0a 	call	0x157a	; 0x157a <__addsf3>
     218:	0e 94 29 0c 	call	0x1852	; 0x1852 <__fixsfsi>
     21c:	cb 01       	movw	r24, r22
     21e:	0e 94 26 05 	call	0xa4c	; 0xa4c <drv8838_fix>
     222:	8c 01       	movw	r16, r24
     224:	a7 01       	movw	r20, r14
     226:	96 01       	movw	r18, r12
     228:	60 e0       	ldi	r22, 0x00	; 0
     22a:	70 e0       	ldi	r23, 0x00	; 0
     22c:	8f e7       	ldi	r24, 0x7F	; 127
     22e:	93 e4       	ldi	r25, 0x43	; 67
     230:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__subsf3>
     234:	0e 94 29 0c 	call	0x1852	; 0x1852 <__fixsfsi>
     238:	cb 01       	movw	r24, r22
     23a:	0e 94 26 05 	call	0xa4c	; 0xa4c <drv8838_fix>
     23e:	bc 01       	movw	r22, r24
     240:	c8 01       	movw	r24, r16
     242:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
     246:	aa c0       	rjmp	.+340    	; 0x39c <main_program+0x22a>
     248:	89 81       	ldd	r24, Y+1	; 0x01
     24a:	81 11       	cpse	r24, r1
     24c:	9c c0       	rjmp	.+312    	; 0x386 <main_program+0x214>
     24e:	8a 81       	ldd	r24, Y+2	; 0x02
     250:	88 23       	and	r24, r24
     252:	a1 f0       	breq	.+40     	; 0x27c <main_program+0x10a>
     254:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <last_enemy_direction>
     258:	ee 24       	eor	r14, r14
     25a:	ea 94       	dec	r14
     25c:	f1 2c       	mov	r15, r1
     25e:	0a e6       	ldi	r16, 0x6A	; 106
     260:	1f ef       	ldi	r17, 0xFF	; 255
     262:	1a c0       	rjmp	.+52     	; 0x298 <main_program+0x126>
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <last_enemy_direction>
     26a:	0f 2e       	mov	r0, r31
     26c:	fa e6       	ldi	r31, 0x6A	; 106
     26e:	ef 2e       	mov	r14, r31
     270:	ff 24       	eor	r15, r15
     272:	fa 94       	dec	r15
     274:	f0 2d       	mov	r31, r0
     276:	0f ef       	ldi	r16, 0xFF	; 255
     278:	10 e0       	ldi	r17, 0x00	; 0
     27a:	0e c0       	rjmp	.+28     	; 0x298 <main_program+0x126>
     27c:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <last_enemy_direction>
     280:	81 11       	cpse	r24, r1
     282:	06 c0       	rjmp	.+12     	; 0x290 <main_program+0x11e>
     284:	ee 24       	eor	r14, r14
     286:	ea 94       	dec	r14
     288:	f1 2c       	mov	r15, r1
     28a:	00 e0       	ldi	r16, 0x00	; 0
     28c:	10 e0       	ldi	r17, 0x00	; 0
     28e:	04 c0       	rjmp	.+8      	; 0x298 <main_program+0x126>
     290:	e1 2c       	mov	r14, r1
     292:	f1 2c       	mov	r15, r1
     294:	0f ef       	ldi	r16, 0xFF	; 255
     296:	10 e0       	ldi	r17, 0x00	; 0
     298:	80 e0       	ldi	r24, 0x00	; 0
     29a:	0e 94 93 08 	call	0x1126	; 0x1126 <pid_reset>
     29e:	b7 01       	movw	r22, r14
     2a0:	c8 01       	movw	r24, r16
     2a2:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
     2a6:	7a c0       	rjmp	.+244    	; 0x39c <main_program+0x22a>
     2a8:	62 e3       	ldi	r22, 0x32	; 50
     2aa:	70 e0       	ldi	r23, 0x00	; 0
     2ac:	82 e3       	ldi	r24, 0x32	; 50
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
     2b4:	19 81       	ldd	r17, Y+1	; 0x01
     2b6:	11 11       	cpse	r17, r1
     2b8:	6a c0       	rjmp	.+212    	; 0x38e <main_program+0x21c>
     2ba:	8a 81       	ldd	r24, Y+2	; 0x02
     2bc:	81 11       	cpse	r24, r1
     2be:	1b c0       	rjmp	.+54     	; 0x2f6 <main_program+0x184>
     2c0:	6d c0       	rjmp	.+218    	; 0x39c <main_program+0x22a>
     2c2:	c1 2c       	mov	r12, r1
     2c4:	d1 2c       	mov	r13, r1
     2c6:	76 01       	movw	r14, r12
     2c8:	8f ec       	ldi	r24, 0xCF	; 207
     2ca:	97 e0       	ldi	r25, 0x07	; 7
     2cc:	01 97       	sbiw	r24, 0x01	; 1
     2ce:	f1 f7       	brne	.-4      	; 0x2cc <main_program+0x15a>
     2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <main_program+0x160>
     2d2:	00 00       	nop
     2d4:	24 e5       	ldi	r18, 0x54	; 84
     2d6:	37 eb       	ldi	r19, 0xB7	; 183
     2d8:	45 ea       	ldi	r20, 0xA5	; 165
     2da:	58 e3       	ldi	r21, 0x38	; 56
     2dc:	c7 01       	movw	r24, r14
     2de:	b6 01       	movw	r22, r12
     2e0:	0e 94 bd 0a 	call	0x157a	; 0x157a <__addsf3>
     2e4:	6b 01       	movw	r12, r22
     2e6:	7c 01       	movw	r14, r24
     2e8:	89 81       	ldd	r24, Y+1	; 0x01
     2ea:	88 23       	and	r24, r24
     2ec:	39 f0       	breq	.+14     	; 0x2fc <main_program+0x18a>
     2ee:	8a 81       	ldd	r24, Y+2	; 0x02
     2f0:	81 11       	cpse	r24, r1
     2f2:	ea cf       	rjmp	.-44     	; 0x2c8 <main_program+0x156>
     2f4:	03 c0       	rjmp	.+6      	; 0x2fc <main_program+0x18a>
     2f6:	c1 2c       	mov	r12, r1
     2f8:	d1 2c       	mov	r13, r1
     2fa:	76 01       	movw	r14, r12
     2fc:	60 e0       	ldi	r22, 0x00	; 0
     2fe:	70 e0       	ldi	r23, 0x00	; 0
     300:	80 e0       	ldi	r24, 0x00	; 0
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
     308:	9f ef       	ldi	r25, 0xFF	; 255
     30a:	20 e7       	ldi	r18, 0x70	; 112
     30c:	82 e0       	ldi	r24, 0x02	; 2
     30e:	91 50       	subi	r25, 0x01	; 1
     310:	20 40       	sbci	r18, 0x00	; 0
     312:	80 40       	sbci	r24, 0x00	; 0
     314:	e1 f7       	brne	.-8      	; 0x30e <main_program+0x19c>
     316:	00 c0       	rjmp	.+0      	; 0x318 <main_program+0x1a6>
     318:	00 00       	nop
     31a:	26 e0       	ldi	r18, 0x06	; 6
     31c:	31 e8       	ldi	r19, 0x81	; 129
     31e:	45 e9       	ldi	r20, 0x95	; 149
     320:	5d e3       	ldi	r21, 0x3D	; 61
     322:	c7 01       	movw	r24, r14
     324:	b6 01       	movw	r22, r12
     326:	0e 94 3c 0b 	call	0x1678	; 0x1678 <atan2>
     32a:	6b 01       	movw	r12, r22
     32c:	7c 01       	movw	r14, r24
     32e:	6e ec       	ldi	r22, 0xCE	; 206
     330:	7f ef       	ldi	r23, 0xFF	; 255
     332:	8e ec       	ldi	r24, 0xCE	; 206
     334:	9f ef       	ldi	r25, 0xFF	; 255
     336:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
     33a:	9f ef       	ldi	r25, 0xFF	; 255
     33c:	22 e5       	ldi	r18, 0x52	; 82
     33e:	87 e0       	ldi	r24, 0x07	; 7
     340:	91 50       	subi	r25, 0x01	; 1
     342:	20 40       	sbci	r18, 0x00	; 0
     344:	80 40       	sbci	r24, 0x00	; 0
     346:	e1 f7       	brne	.-8      	; 0x340 <main_program+0x1ce>
     348:	00 c0       	rjmp	.+0      	; 0x34a <main_program+0x1d8>
     34a:	00 00       	nop
     34c:	60 e0       	ldi	r22, 0x00	; 0
     34e:	70 e0       	ldi	r23, 0x00	; 0
     350:	80 e0       	ldi	r24, 0x00	; 0
     352:	90 e0       	ldi	r25, 0x00	; 0
     354:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
     358:	9f ef       	ldi	r25, 0xFF	; 255
     35a:	20 e7       	ldi	r18, 0x70	; 112
     35c:	82 e0       	ldi	r24, 0x02	; 2
     35e:	91 50       	subi	r25, 0x01	; 1
     360:	20 40       	sbci	r18, 0x00	; 0
     362:	80 40       	sbci	r24, 0x00	; 0
     364:	e1 f7       	brne	.-8      	; 0x35e <main_program+0x1ec>
     366:	00 c0       	rjmp	.+0      	; 0x368 <main_program+0x1f6>
     368:	00 00       	nop
     36a:	a7 01       	movw	r20, r14
     36c:	96 01       	movw	r18, r12
     36e:	6b ed       	ldi	r22, 0xDB	; 219
     370:	7f e0       	ldi	r23, 0x0F	; 15
     372:	89 e4       	ldi	r24, 0x49	; 73
     374:	90 e4       	ldi	r25, 0x40	; 64
     376:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__subsf3>
     37a:	22 e3       	ldi	r18, 0x32	; 50
     37c:	30 e0       	ldi	r19, 0x00	; 0
     37e:	41 2f       	mov	r20, r17
     380:	0e 94 1f 07 	call	0xe3e	; 0xe3e <rotate>
     384:	0b c0       	rjmp	.+22     	; 0x39c <main_program+0x22a>
     386:	8a 81       	ldd	r24, Y+2	; 0x02
     388:	81 11       	cpse	r24, r1
     38a:	78 cf       	rjmp	.-272    	; 0x27c <main_program+0x10a>
     38c:	6b cf       	rjmp	.-298    	; 0x264 <main_program+0xf2>
     38e:	8a 81       	ldd	r24, Y+2	; 0x02
     390:	81 11       	cpse	r24, r1
     392:	97 cf       	rjmp	.-210    	; 0x2c2 <main_program+0x150>
     394:	c1 2c       	mov	r12, r1
     396:	d1 2c       	mov	r13, r1
     398:	76 01       	movw	r14, r12
     39a:	b0 cf       	rjmp	.-160    	; 0x2fc <main_program+0x18a>
     39c:	0f 90       	pop	r0
     39e:	0f 90       	pop	r0
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	1f 91       	pop	r17
     3a6:	0f 91       	pop	r16
     3a8:	ff 90       	pop	r15
     3aa:	ef 90       	pop	r14
     3ac:	df 90       	pop	r13
     3ae:	cf 90       	pop	r12
     3b0:	08 95       	ret

000003b2 <set_program_state>:
     3b2:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <current_program_state>
     3b6:	82 30       	cpi	r24, 0x02	; 2
     3b8:	a9 f0       	breq	.+42     	; 0x3e4 <set_program_state+0x32>
     3ba:	28 f4       	brcc	.+10     	; 0x3c6 <set_program_state+0x14>
     3bc:	88 23       	and	r24, r24
     3be:	41 f0       	breq	.+16     	; 0x3d0 <set_program_state+0x1e>
     3c0:	81 30       	cpi	r24, 0x01	; 1
     3c2:	59 f0       	breq	.+22     	; 0x3da <set_program_state+0x28>
     3c4:	1e c0       	rjmp	.+60     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     3c6:	83 30       	cpi	r24, 0x03	; 3
     3c8:	91 f0       	breq	.+36     	; 0x3ee <set_program_state+0x3c>
     3ca:	84 30       	cpi	r24, 0x04	; 4
     3cc:	a9 f0       	breq	.+42     	; 0x3f8 <set_program_state+0x46>
     3ce:	19 c0       	rjmp	.+50     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     3d0:	61 e0       	ldi	r22, 0x01	; 1
     3d2:	8a e0       	ldi	r24, 0x0A	; 10
     3d4:	0e 94 0d 07 	call	0xe1a	; 0xe1a <eeprom_write>
     3d8:	17 c0       	rjmp	.+46     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3da:	61 e0       	ldi	r22, 0x01	; 1
     3dc:	8a e0       	ldi	r24, 0x0A	; 10
     3de:	0e 94 0d 07 	call	0xe1a	; 0xe1a <eeprom_write>
     3e2:	12 c0       	rjmp	.+36     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3e4:	62 e0       	ldi	r22, 0x02	; 2
     3e6:	8a e0       	ldi	r24, 0x0A	; 10
     3e8:	0e 94 0d 07 	call	0xe1a	; 0xe1a <eeprom_write>
     3ec:	0d c0       	rjmp	.+26     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3ee:	63 e0       	ldi	r22, 0x03	; 3
     3f0:	8a e0       	ldi	r24, 0x0A	; 10
     3f2:	0e 94 0d 07 	call	0xe1a	; 0xe1a <eeprom_write>
     3f6:	08 c0       	rjmp	.+16     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3f8:	61 e0       	ldi	r22, 0x01	; 1
     3fa:	8a e0       	ldi	r24, 0x0A	; 10
     3fc:	0e 94 0d 07 	call	0xe1a	; 0xe1a <eeprom_write>
     400:	03 c0       	rjmp	.+6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     402:	80 e0       	ldi	r24, 0x00	; 0
     404:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <set_program_state>
     408:	80 e0       	ldi	r24, 0x00	; 0
     40a:	0e 94 6a 00 	call	0xd4	; 0xd4 <set_tactics_state>
     40e:	08 95       	ret

00000410 <set_commands>:
     410:	68 2f       	mov	r22, r24
     412:	6e 7f       	andi	r22, 0xFE	; 254
     414:	60 93 b8 01 	sts	0x01B8, r22	; 0x8001b8 <stop_command>
     418:	81 e0       	ldi	r24, 0x01	; 1
     41a:	86 0f       	add	r24, r22
     41c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <start_command>
     420:	8b e0       	ldi	r24, 0x0B	; 11
     422:	0e 94 0d 07 	call	0xe1a	; 0xe1a <eeprom_write>
     426:	08 95       	ret

00000428 <update_program_state_button>:
     428:	3f 92       	push	r3
     42a:	4f 92       	push	r4
     42c:	5f 92       	push	r5
     42e:	6f 92       	push	r6
     430:	7f 92       	push	r7
     432:	8f 92       	push	r8
     434:	9f 92       	push	r9
     436:	af 92       	push	r10
     438:	bf 92       	push	r11
     43a:	cf 92       	push	r12
     43c:	df 92       	push	r13
     43e:	ef 92       	push	r14
     440:	ff 92       	push	r15
     442:	0f 93       	push	r16
     444:	1f 93       	push	r17
     446:	cf 93       	push	r28
     448:	df 93       	push	r29
     44a:	00 d0       	rcall	.+0      	; 0x44c <update_program_state_button+0x24>
     44c:	00 d0       	rcall	.+0      	; 0x44e <update_program_state_button+0x26>
     44e:	00 d0       	rcall	.+0      	; 0x450 <update_program_state_button+0x28>
     450:	cd b7       	in	r28, 0x3d	; 61
     452:	de b7       	in	r29, 0x3e	; 62
     454:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <current_program_state>
     458:	88 23       	and	r24, r24
     45a:	19 f0       	breq	.+6      	; 0x462 <update_program_state_button+0x3a>
     45c:	83 30       	cpi	r24, 0x03	; 3
     45e:	29 f0       	breq	.+10     	; 0x46a <update_program_state_button+0x42>
     460:	07 c0       	rjmp	.+14     	; 0x470 <update_program_state_button+0x48>
     462:	81 e0       	ldi	r24, 0x01	; 1
     464:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <set_program_state>
     468:	03 c0       	rjmp	.+6      	; 0x470 <update_program_state_button+0x48>
     46a:	84 e0       	ldi	r24, 0x04	; 4
     46c:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <set_program_state>
     470:	0e 94 09 07 	call	0xe12	; 0xe12 <button_get_state>
     474:	88 23       	and	r24, r24
     476:	09 f4       	brne	.+2      	; 0x47a <update_program_state_button+0x52>
     478:	c4 c0       	rjmp	.+392    	; 0x602 <update_program_state_button+0x1da>
     47a:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <button_last_state>
     47e:	81 11       	cpse	r24, r1
     480:	c0 c0       	rjmp	.+384    	; 0x602 <update_program_state_button+0x1da>
     482:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <current_program_state>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	09 f4       	brne	.+2      	; 0x48c <update_program_state_button+0x64>
     48a:	b4 c0       	rjmp	.+360    	; 0x5f4 <update_program_state_button+0x1cc>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	09 f4       	brne	.+2      	; 0x492 <update_program_state_button+0x6a>
     490:	b5 c0       	rjmp	.+362    	; 0x5fc <update_program_state_button+0x1d4>
     492:	81 30       	cpi	r24, 0x01	; 1
     494:	09 f0       	breq	.+2      	; 0x498 <update_program_state_button+0x70>
     496:	b5 c0       	rjmp	.+362    	; 0x602 <update_program_state_button+0x1da>
     498:	0f 2e       	mov	r0, r31
     49a:	fa ef       	ldi	r31, 0xFA	; 250
     49c:	ef 2e       	mov	r14, r31
     49e:	f1 2c       	mov	r15, r1
     4a0:	f0 2d       	mov	r31, r0
     4a2:	0f 2e       	mov	r0, r31
     4a4:	f4 ec       	ldi	r31, 0xC4	; 196
     4a6:	cf 2e       	mov	r12, r31
     4a8:	f9 e0       	ldi	r31, 0x09	; 9
     4aa:	df 2e       	mov	r13, r31
     4ac:	f0 2d       	mov	r31, r0
     4ae:	23 e3       	ldi	r18, 0x33	; 51
     4b0:	e2 16       	cp	r14, r18
     4b2:	f1 04       	cpc	r15, r1
     4b4:	1c f0       	brlt	.+6      	; 0x4bc <update_program_state_button+0x94>
     4b6:	3c e0       	ldi	r19, 0x0C	; 12
     4b8:	e3 1a       	sub	r14, r19
     4ba:	f1 08       	sbc	r15, r1
     4bc:	ce 18       	sub	r12, r14
     4be:	df 08       	sbc	r13, r15
     4c0:	87 01       	movw	r16, r14
     4c2:	ff 20       	and	r15, r15
     4c4:	14 f4       	brge	.+4      	; 0x4ca <update_program_state_button+0xa2>
     4c6:	0f 5f       	subi	r16, 0xFF	; 255
     4c8:	1f 4f       	sbci	r17, 0xFF	; 255
     4ca:	15 95       	asr	r17
     4cc:	07 95       	ror	r16
     4ce:	10 16       	cp	r1, r16
     4d0:	11 06       	cpc	r1, r17
     4d2:	0c f0       	brlt	.+2      	; 0x4d6 <update_program_state_button+0xae>
     4d4:	88 c0       	rjmp	.+272    	; 0x5e6 <update_program_state_button+0x1be>
     4d6:	1e 82       	std	Y+6, r1	; 0x06
     4d8:	1d 82       	std	Y+5, r1	; 0x05
     4da:	c8 01       	movw	r24, r16
     4dc:	01 97       	sbiw	r24, 0x01	; 1
     4de:	9c 01       	movw	r18, r24
     4e0:	99 0f       	add	r25, r25
     4e2:	44 0b       	sbc	r20, r20
     4e4:	55 0b       	sbc	r21, r21
     4e6:	29 83       	std	Y+1, r18	; 0x01
     4e8:	3a 83       	std	Y+2, r19	; 0x02
     4ea:	4b 83       	std	Y+3, r20	; 0x03
     4ec:	5c 83       	std	Y+4, r21	; 0x04
     4ee:	69 81       	ldd	r22, Y+1	; 0x01
     4f0:	7a 81       	ldd	r23, Y+2	; 0x02
     4f2:	8b 81       	ldd	r24, Y+3	; 0x03
     4f4:	9c 81       	ldd	r25, Y+4	; 0x04
     4f6:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     4fa:	4b 01       	movw	r8, r22
     4fc:	5c 01       	movw	r10, r24
     4fe:	4d 81       	ldd	r20, Y+5	; 0x05
     500:	5e 81       	ldd	r21, Y+6	; 0x06
     502:	ba 01       	movw	r22, r20
     504:	55 0f       	add	r21, r21
     506:	88 0b       	sbc	r24, r24
     508:	99 0b       	sbc	r25, r25
     50a:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     50e:	a5 01       	movw	r20, r10
     510:	94 01       	movw	r18, r8
     512:	0e 94 b7 0b 	call	0x176e	; 0x176e <__divsf3>
     516:	2b 01       	movw	r4, r22
     518:	3c 01       	movw	r6, r24
     51a:	20 e0       	ldi	r18, 0x00	; 0
     51c:	30 e0       	ldi	r19, 0x00	; 0
     51e:	40 e2       	ldi	r20, 0x20	; 32
     520:	52 e4       	ldi	r21, 0x42	; 66
     522:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     526:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
     52a:	36 2e       	mov	r3, r22
     52c:	20 e0       	ldi	r18, 0x00	; 0
     52e:	30 e0       	ldi	r19, 0x00	; 0
     530:	48 ec       	ldi	r20, 0xC8	; 200
     532:	52 e4       	ldi	r21, 0x42	; 66
     534:	c3 01       	movw	r24, r6
     536:	b2 01       	movw	r22, r4
     538:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     53c:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
     540:	86 2f       	mov	r24, r22
     542:	40 e0       	ldi	r20, 0x00	; 0
     544:	63 2d       	mov	r22, r3
     546:	0e 94 ab 0a 	call	0x1556	; 0x1556 <rgb_color_set_rgb>
     54a:	8f ec       	ldi	r24, 0xCF	; 207
     54c:	97 e0       	ldi	r25, 0x07	; 7
     54e:	01 97       	sbiw	r24, 0x01	; 1
     550:	f1 f7       	brne	.-4      	; 0x54e <update_program_state_button+0x126>
     552:	00 c0       	rjmp	.+0      	; 0x554 <update_program_state_button+0x12c>
     554:	00 00       	nop
     556:	2d 81       	ldd	r18, Y+5	; 0x05
     558:	3e 81       	ldd	r19, Y+6	; 0x06
     55a:	2f 5f       	subi	r18, 0xFF	; 255
     55c:	3f 4f       	sbci	r19, 0xFF	; 255
     55e:	3e 83       	std	Y+6, r19	; 0x06
     560:	2d 83       	std	Y+5, r18	; 0x05
     562:	20 17       	cp	r18, r16
     564:	31 07       	cpc	r19, r17
     566:	19 f6       	brne	.-122    	; 0x4ee <update_program_state_button+0xc6>
     568:	1a 82       	std	Y+2, r1	; 0x02
     56a:	19 82       	std	Y+1, r1	; 0x01
     56c:	49 81       	ldd	r20, Y+1	; 0x01
     56e:	5a 81       	ldd	r21, Y+2	; 0x02
     570:	ba 01       	movw	r22, r20
     572:	55 0f       	add	r21, r21
     574:	88 0b       	sbc	r24, r24
     576:	99 0b       	sbc	r25, r25
     578:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     57c:	a5 01       	movw	r20, r10
     57e:	94 01       	movw	r18, r8
     580:	0e 94 b7 0b 	call	0x176e	; 0x176e <__divsf3>
     584:	9b 01       	movw	r18, r22
     586:	ac 01       	movw	r20, r24
     588:	60 e0       	ldi	r22, 0x00	; 0
     58a:	70 e0       	ldi	r23, 0x00	; 0
     58c:	80 e8       	ldi	r24, 0x80	; 128
     58e:	9f e3       	ldi	r25, 0x3F	; 63
     590:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__subsf3>
     594:	2b 01       	movw	r4, r22
     596:	3c 01       	movw	r6, r24
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	30 e0       	ldi	r19, 0x00	; 0
     59c:	40 e2       	ldi	r20, 0x20	; 32
     59e:	52 e4       	ldi	r21, 0x42	; 66
     5a0:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     5a4:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
     5a8:	36 2e       	mov	r3, r22
     5aa:	20 e0       	ldi	r18, 0x00	; 0
     5ac:	30 e0       	ldi	r19, 0x00	; 0
     5ae:	48 ec       	ldi	r20, 0xC8	; 200
     5b0:	52 e4       	ldi	r21, 0x42	; 66
     5b2:	c3 01       	movw	r24, r6
     5b4:	b2 01       	movw	r22, r4
     5b6:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     5ba:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
     5be:	86 2f       	mov	r24, r22
     5c0:	40 e0       	ldi	r20, 0x00	; 0
     5c2:	63 2d       	mov	r22, r3
     5c4:	0e 94 ab 0a 	call	0x1556	; 0x1556 <rgb_color_set_rgb>
     5c8:	8f ec       	ldi	r24, 0xCF	; 207
     5ca:	97 e0       	ldi	r25, 0x07	; 7
     5cc:	01 97       	sbiw	r24, 0x01	; 1
     5ce:	f1 f7       	brne	.-4      	; 0x5cc <update_program_state_button+0x1a4>
     5d0:	00 c0       	rjmp	.+0      	; 0x5d2 <update_program_state_button+0x1aa>
     5d2:	00 00       	nop
     5d4:	29 81       	ldd	r18, Y+1	; 0x01
     5d6:	3a 81       	ldd	r19, Y+2	; 0x02
     5d8:	2f 5f       	subi	r18, 0xFF	; 255
     5da:	3f 4f       	sbci	r19, 0xFF	; 255
     5dc:	3a 83       	std	Y+2, r19	; 0x02
     5de:	29 83       	std	Y+1, r18	; 0x01
     5e0:	20 17       	cp	r18, r16
     5e2:	31 07       	cpc	r19, r17
     5e4:	19 f6       	brne	.-122    	; 0x56c <update_program_state_button+0x144>
     5e6:	dd 20       	and	r13, r13
     5e8:	0c f0       	brlt	.+2      	; 0x5ec <update_program_state_button+0x1c4>
     5ea:	61 cf       	rjmp	.-318    	; 0x4ae <update_program_state_button+0x86>
     5ec:	82 e0       	ldi	r24, 0x02	; 2
     5ee:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <set_program_state>
     5f2:	07 c0       	rjmp	.+14     	; 0x602 <update_program_state_button+0x1da>
     5f4:	83 e0       	ldi	r24, 0x03	; 3
     5f6:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <set_program_state>
     5fa:	03 c0       	rjmp	.+6      	; 0x602 <update_program_state_button+0x1da>
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <set_program_state>
     602:	0e 94 09 07 	call	0xe12	; 0xe12 <button_get_state>
     606:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <button_last_state>
     60a:	26 96       	adiw	r28, 0x06	; 6
     60c:	0f b6       	in	r0, 0x3f	; 63
     60e:	f8 94       	cli
     610:	de bf       	out	0x3e, r29	; 62
     612:	0f be       	out	0x3f, r0	; 63
     614:	cd bf       	out	0x3d, r28	; 61
     616:	df 91       	pop	r29
     618:	cf 91       	pop	r28
     61a:	1f 91       	pop	r17
     61c:	0f 91       	pop	r16
     61e:	ff 90       	pop	r15
     620:	ef 90       	pop	r14
     622:	df 90       	pop	r13
     624:	cf 90       	pop	r12
     626:	bf 90       	pop	r11
     628:	af 90       	pop	r10
     62a:	9f 90       	pop	r9
     62c:	8f 90       	pop	r8
     62e:	7f 90       	pop	r7
     630:	6f 90       	pop	r6
     632:	5f 90       	pop	r5
     634:	4f 90       	pop	r4
     636:	3f 90       	pop	r3
     638:	08 95       	ret

0000063a <color_function>:
#include "program_state_machine.h"
#include "tactics_state_machine.h"

double color_counter = 0;

rgb_color color_function(double value, double MIN, double MAX) {
     63a:	2f 92       	push	r2
     63c:	3f 92       	push	r3
     63e:	4f 92       	push	r4
     640:	5f 92       	push	r5
     642:	6f 92       	push	r6
     644:	7f 92       	push	r7
     646:	8f 92       	push	r8
     648:	9f 92       	push	r9
     64a:	af 92       	push	r10
     64c:	bf 92       	push	r11
     64e:	cf 92       	push	r12
     650:	df 92       	push	r13
     652:	ef 92       	push	r14
     654:	ff 92       	push	r15
     656:	0f 93       	push	r16
     658:	1f 93       	push	r17
     65a:	cf 93       	push	r28
     65c:	df 93       	push	r29
     65e:	cd b7       	in	r28, 0x3d	; 61
     660:	de b7       	in	r29, 0x3e	; 62
     662:	ab 97       	sbiw	r28, 0x2b	; 43
     664:	0f b6       	in	r0, 0x3f	; 63
     666:	f8 94       	cli
     668:	de bf       	out	0x3e, r29	; 62
     66a:	0f be       	out	0x3f, r0	; 63
     66c:	cd bf       	out	0x3d, r28	; 61
     66e:	49 01       	movw	r8, r18
     670:	5a 01       	movw	r10, r20
     672:	27 01       	movw	r4, r14
     674:	38 01       	movw	r6, r16
	
	rgb_color array[] = {
     676:	19 82       	std	Y+1, r1	; 0x01
     678:	3f ef       	ldi	r19, 0xFF	; 255
     67a:	3a 83       	std	Y+2, r19	; 0x02
     67c:	3b 83       	std	Y+3, r19	; 0x03
     67e:	1c 82       	std	Y+4, r1	; 0x04
     680:	3d 83       	std	Y+5, r19	; 0x05
     682:	2f e7       	ldi	r18, 0x7F	; 127
     684:	2e 83       	std	Y+6, r18	; 0x06
     686:	1f 82       	std	Y+7, r1	; 0x07
     688:	38 87       	std	Y+8, r19	; 0x08
     68a:	19 86       	std	Y+9, r1	; 0x09
     68c:	2a 87       	std	Y+10, r18	; 0x0a
     68e:	3b 87       	std	Y+11, r19	; 0x0b
     690:	1c 86       	std	Y+12, r1	; 0x0c
     692:	3d 87       	std	Y+13, r19	; 0x0d
     694:	3e 87       	std	Y+14, r19	; 0x0e
     696:	1f 86       	std	Y+15, r1	; 0x0f
     698:	38 8b       	std	Y+16, r19	; 0x10
     69a:	29 8b       	std	Y+17, r18	; 0x11
     69c:	1a 8a       	std	Y+18, r1	; 0x12
     69e:	3b 8b       	std	Y+19, r19	; 0x13
     6a0:	1c 8a       	std	Y+20, r1	; 0x14
     6a2:	1d 8a       	std	Y+21, r1	; 0x15
     6a4:	3e 8b       	std	Y+22, r19	; 0x16
     6a6:	1f 8a       	std	Y+23, r1	; 0x17
     6a8:	28 8f       	std	Y+24, r18	; 0x18
     6aa:	39 8f       	std	Y+25, r19	; 0x19
     6ac:	1a 8e       	std	Y+26, r1	; 0x1a
     6ae:	3b 8f       	std	Y+27, r19	; 0x1b
     6b0:	2c 8f       	std	Y+28, r18	; 0x1c
     6b2:	1d 8e       	std	Y+29, r1	; 0x1d
     6b4:	3e 8f       	std	Y+30, r19	; 0x1e
     6b6:	1f 8e       	std	Y+31, r1	; 0x1f
     6b8:	18 a2       	std	Y+32, r1	; 0x20
     6ba:	39 a3       	std	Y+33, r19	; 0x21
     6bc:	1a a2       	std	Y+34, r1	; 0x22
     6be:	2b a3       	std	Y+35, r18	; 0x23
     6c0:	3c a3       	std	Y+36, r19	; 0x24
     6c2:	1d a2       	std	Y+37, r1	; 0x25
     6c4:	3e a3       	std	Y+38, r19	; 0x26
     6c6:	3f a3       	std	Y+39, r19	; 0x27
     6c8:	18 a6       	std	Y+40, r1	; 0x28
     6ca:	39 a7       	std	Y+41, r19	; 0x29
     6cc:	2a a7       	std	Y+42, r18	; 0x2a
	uint8_t array_size = sizeof(array)/sizeof(rgb_color);
	
	rgb_color result = (rgb_color){0, 0, 0};
		
	double fraq = (value-MIN)/(MAX-MIN);
	double index = fraq*array_size;
     6ce:	a5 01       	movw	r20, r10
     6d0:	94 01       	movw	r18, r8
     6d2:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__subsf3>
     6d6:	6b 01       	movw	r12, r22
     6d8:	7c 01       	movw	r14, r24
     6da:	a5 01       	movw	r20, r10
     6dc:	94 01       	movw	r18, r8
     6de:	c3 01       	movw	r24, r6
     6e0:	b2 01       	movw	r22, r4
     6e2:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__subsf3>
     6e6:	9b 01       	movw	r18, r22
     6e8:	ac 01       	movw	r20, r24
     6ea:	c7 01       	movw	r24, r14
     6ec:	b6 01       	movw	r22, r12
     6ee:	0e 94 b7 0b 	call	0x176e	; 0x176e <__divsf3>
     6f2:	20 e0       	ldi	r18, 0x00	; 0
     6f4:	30 e0       	ldi	r19, 0x00	; 0
     6f6:	40 e6       	ldi	r20, 0x60	; 96
     6f8:	51 e4       	ldi	r21, 0x41	; 65
     6fa:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     6fe:	4b 01       	movw	r8, r22
     700:	5c 01       	movw	r10, r24
	rgb_color low = array[(uint8_t)floor(index)];
     702:	0e 94 9c 0c 	call	0x1938	; 0x1938 <floor>
     706:	6b 01       	movw	r12, r22
     708:	7c 01       	movw	r14, r24
     70a:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
     70e:	70 e0       	ldi	r23, 0x00	; 0
     710:	8b 01       	movw	r16, r22
     712:	00 0f       	add	r16, r16
     714:	11 1f       	adc	r17, r17
     716:	60 0f       	add	r22, r16
     718:	71 1f       	adc	r23, r17
     71a:	01 e0       	ldi	r16, 0x01	; 1
     71c:	10 e0       	ldi	r17, 0x00	; 0
     71e:	0c 0f       	add	r16, r28
     720:	1d 1f       	adc	r17, r29
     722:	06 0f       	add	r16, r22
     724:	17 1f       	adc	r17, r23
	rgb_color high = array[((uint8_t)ceil(index))%array_size];
     726:	c5 01       	movw	r24, r10
     728:	b4 01       	movw	r22, r8
     72a:	0e 94 9b 0b 	call	0x1736	; 0x1736 <ceil>
     72e:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
     732:	86 2f       	mov	r24, r22
     734:	86 95       	lsr	r24
     736:	93 e9       	ldi	r25, 0x93	; 147
     738:	89 9f       	mul	r24, r25
     73a:	81 2d       	mov	r24, r1
     73c:	11 24       	eor	r1, r1
     73e:	86 95       	lsr	r24
     740:	86 95       	lsr	r24
     742:	88 0f       	add	r24, r24
     744:	98 2f       	mov	r25, r24
     746:	99 0f       	add	r25, r25
     748:	99 0f       	add	r25, r25
     74a:	99 0f       	add	r25, r25
     74c:	98 1b       	sub	r25, r24
     74e:	69 1b       	sub	r22, r25
     750:	70 e0       	ldi	r23, 0x00	; 0
     752:	1b 01       	movw	r2, r22
     754:	22 0c       	add	r2, r2
     756:	33 1c       	adc	r3, r3
     758:	26 0e       	add	r2, r22
     75a:	37 1e       	adc	r3, r23
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	8c 0f       	add	r24, r28
     762:	9d 1f       	adc	r25, r29
     764:	28 0e       	add	r2, r24
     766:	39 1e       	adc	r3, r25
	double p = index - floor(index);
     768:	a7 01       	movw	r20, r14
     76a:	96 01       	movw	r18, r12
     76c:	c5 01       	movw	r24, r10
     76e:	b4 01       	movw	r22, r8
     770:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__subsf3>
     774:	6b 01       	movw	r12, r22
     776:	7c 01       	movw	r14, r24
	
	result.r = (1-p)*low.r + p*high.r;
     778:	9b 01       	movw	r18, r22
     77a:	ac 01       	movw	r20, r24
     77c:	60 e0       	ldi	r22, 0x00	; 0
     77e:	70 e0       	ldi	r23, 0x00	; 0
     780:	80 e8       	ldi	r24, 0x80	; 128
     782:	9f e3       	ldi	r25, 0x3F	; 63
     784:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__subsf3>
     788:	4b 01       	movw	r8, r22
     78a:	5c 01       	movw	r10, r24
     78c:	f8 01       	movw	r30, r16
     78e:	61 81       	ldd	r22, Z+1	; 0x01
     790:	70 e0       	ldi	r23, 0x00	; 0
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     79a:	a5 01       	movw	r20, r10
     79c:	94 01       	movw	r18, r8
     79e:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     7a2:	2b 01       	movw	r4, r22
     7a4:	3c 01       	movw	r6, r24
     7a6:	f1 01       	movw	r30, r2
     7a8:	61 81       	ldd	r22, Z+1	; 0x01
     7aa:	70 e0       	ldi	r23, 0x00	; 0
     7ac:	80 e0       	ldi	r24, 0x00	; 0
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     7b4:	a7 01       	movw	r20, r14
     7b6:	96 01       	movw	r18, r12
     7b8:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     7bc:	9b 01       	movw	r18, r22
     7be:	ac 01       	movw	r20, r24
     7c0:	c3 01       	movw	r24, r6
     7c2:	b2 01       	movw	r22, r4
     7c4:	0e 94 bd 0a 	call	0x157a	; 0x157a <__addsf3>
     7c8:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
     7cc:	6b a7       	std	Y+43, r22	; 0x2b
	result.g = (1-p)*low.g + p*high.g;
	result.b = (1-p)*low.b + p*high.b;
     7ce:	f8 01       	movw	r30, r16
     7d0:	62 81       	ldd	r22, Z+2	; 0x02
     7d2:	70 e0       	ldi	r23, 0x00	; 0
     7d4:	80 e0       	ldi	r24, 0x00	; 0
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     7dc:	a5 01       	movw	r20, r10
     7de:	94 01       	movw	r18, r8
     7e0:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     7e4:	2b 01       	movw	r4, r22
     7e6:	3c 01       	movw	r6, r24
     7e8:	f1 01       	movw	r30, r2
     7ea:	62 81       	ldd	r22, Z+2	; 0x02
     7ec:	70 e0       	ldi	r23, 0x00	; 0
     7ee:	80 e0       	ldi	r24, 0x00	; 0
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     7f6:	a7 01       	movw	r20, r14
     7f8:	96 01       	movw	r18, r12
     7fa:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     7fe:	9b 01       	movw	r18, r22
     800:	ac 01       	movw	r20, r24
     802:	c3 01       	movw	r24, r6
     804:	b2 01       	movw	r22, r4
     806:	0e 94 bd 0a 	call	0x157a	; 0x157a <__addsf3>
     80a:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
     80e:	76 2e       	mov	r7, r22
	
	return result;
     810:	f8 01       	movw	r30, r16
     812:	60 81       	ld	r22, Z
     814:	70 e0       	ldi	r23, 0x00	; 0
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     81e:	a5 01       	movw	r20, r10
     820:	94 01       	movw	r18, r8
     822:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     826:	4b 01       	movw	r8, r22
     828:	5c 01       	movw	r10, r24
     82a:	f1 01       	movw	r30, r2
     82c:	60 81       	ld	r22, Z
     82e:	70 e0       	ldi	r23, 0x00	; 0
     830:	80 e0       	ldi	r24, 0x00	; 0
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     838:	a7 01       	movw	r20, r14
     83a:	96 01       	movw	r18, r12
     83c:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     840:	9b 01       	movw	r18, r22
     842:	ac 01       	movw	r20, r24
     844:	c5 01       	movw	r24, r10
     846:	b4 01       	movw	r22, r8
     848:	0e 94 bd 0a 	call	0x157a	; 0x157a <__addsf3>
     84c:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
}
     850:	7b a5       	ldd	r23, Y+43	; 0x2b
     852:	87 2d       	mov	r24, r7
     854:	ab 96       	adiw	r28, 0x2b	; 43
     856:	0f b6       	in	r0, 0x3f	; 63
     858:	f8 94       	cli
     85a:	de bf       	out	0x3e, r29	; 62
     85c:	0f be       	out	0x3f, r0	; 63
     85e:	cd bf       	out	0x3d, r28	; 61
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	0f 91       	pop	r16
     868:	ff 90       	pop	r15
     86a:	ef 90       	pop	r14
     86c:	df 90       	pop	r13
     86e:	cf 90       	pop	r12
     870:	bf 90       	pop	r11
     872:	af 90       	pop	r10
     874:	9f 90       	pop	r9
     876:	8f 90       	pop	r8
     878:	7f 90       	pop	r7
     87a:	6f 90       	pop	r6
     87c:	5f 90       	pop	r5
     87e:	4f 90       	pop	r4
     880:	3f 90       	pop	r3
     882:	2f 90       	pop	r2
     884:	08 95       	ret

00000886 <main>:

int main() {
	
	uart_begin(9600);
     886:	60 e8       	ldi	r22, 0x80	; 128
     888:	75 e2       	ldi	r23, 0x25	; 37
     88a:	80 e0       	ldi	r24, 0x00	; 0
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <uart_begin>
	decoder_rc5_initialize();
     892:	0e 94 c5 08 	call	0x118a	; 0x118a <decoder_rc5_initialize>
	pid_initialize(0, 127.5 + 50, 0, 0);
     896:	c1 2c       	mov	r12, r1
     898:	d1 2c       	mov	r13, r1
     89a:	76 01       	movw	r14, r12
     89c:	97 01       	movw	r18, r14
     89e:	86 01       	movw	r16, r12
     8a0:	40 e0       	ldi	r20, 0x00	; 0
     8a2:	50 e8       	ldi	r21, 0x80	; 128
     8a4:	61 e3       	ldi	r22, 0x31	; 49
     8a6:	73 e4       	ldi	r23, 0x43	; 67
     8a8:	80 e0       	ldi	r24, 0x00	; 0
     8aa:	0e 94 9e 07 	call	0xf3c	; 0xf3c <pid_initialize>
	
	drv8838_initialize(FORWARD, BACKWARD);
     8ae:	63 e0       	ldi	r22, 0x03	; 3
     8b0:	82 e0       	ldi	r24, 0x02	; 2
     8b2:	0e 94 a6 05 	call	0xb4c	; 0xb4c <drv8838_initialize>
	qtr1a_initialize(AUTO, 500);
     8b6:	64 ef       	ldi	r22, 0xF4	; 244
     8b8:	71 e0       	ldi	r23, 0x01	; 1
     8ba:	86 e0       	ldi	r24, 0x06	; 6
     8bc:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <qtr1a_initialize>
	ir38khz_initialize();
     8c0:	0e 94 cd 05 	call	0xb9a	; 0xb9a <ir38khz_initialize>
	switch_initialize();
     8c4:	0e 94 fd 06 	call	0xdfa	; 0xdfa <switch_initialize>
	button_initialize();
     8c8:	0e 94 06 07 	call	0xe0c	; 0xe0c <button_initialize>
	
	set_commands(eeprom_read(ADDRESS_DYHLO_IDENTIFIER));
     8cc:	8b e0       	ldi	r24, 0x0B	; 11
     8ce:	0e 94 17 07 	call	0xe2e	; 0xe2e <eeprom_read>
     8d2:	0e 94 08 02 	call	0x410	; 0x410 <set_commands>
	set_program_state(eeprom_read(ADDRESS_PROGRAM_STATE));
     8d6:	8a e0       	ldi	r24, 0x0A	; 10
     8d8:	0e 94 17 07 	call	0xe2e	; 0xe2e <eeprom_read>
     8dc:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <set_program_state>
	set_tactics_state(eeprom_read(ADDRESS_TACTICS_STATE));
     8e0:	8c e0       	ldi	r24, 0x0C	; 12
     8e2:	0e 94 17 07 	call	0xe2e	; 0xe2e <eeprom_read>
     8e6:	0e 94 6a 00 	call	0xd4	; 0xd4 <set_tactics_state>
	
    while(1) {
		//update_program_state_rc5();
		update_program_state_button();
     8ea:	0e 94 14 02 	call	0x428	; 0x428 <update_program_state_button>
		//update_program_state_module();

		switch(current_program_state) {
     8ee:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <current_program_state>
     8f2:	81 30       	cpi	r24, 0x01	; 1
     8f4:	09 f4       	brne	.+2      	; 0x8f8 <main+0x72>
     8f6:	47 c0       	rjmp	.+142    	; 0x986 <__stack+0x87>
     8f8:	38 f0       	brcs	.+14     	; 0x908 <__stack+0x9>
     8fa:	82 30       	cpi	r24, 0x02	; 2
     8fc:	09 f4       	brne	.+2      	; 0x900 <__stack+0x1>
     8fe:	8c c0       	rjmp	.+280    	; 0xa18 <__stack+0x119>
     900:	83 30       	cpi	r24, 0x03	; 3
     902:	09 f4       	brne	.+2      	; 0x906 <__stack+0x7>
     904:	91 c0       	rjmp	.+290    	; 0xa28 <__stack+0x129>
     906:	9b c0       	rjmp	.+310    	; 0xa3e <__stack+0x13f>
			case PROGRAM_STATE_PROGRRAMING:	{
				drv8838_set_speeds(0, 0);
     908:	60 e0       	ldi	r22, 0x00	; 0
     90a:	70 e0       	ldi	r23, 0x00	; 0
     90c:	80 e0       	ldi	r24, 0x00	; 0
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
				rgb_color_set_rgb(255, 165, 0);		_delay_ms(50);
     914:	40 e0       	ldi	r20, 0x00	; 0
     916:	65 ea       	ldi	r22, 0xA5	; 165
     918:	8f ef       	ldi	r24, 0xFF	; 255
     91a:	0e 94 ab 0a 	call	0x1556	; 0x1556 <rgb_color_set_rgb>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     91e:	2f e7       	ldi	r18, 0x7F	; 127
     920:	88 e3       	ldi	r24, 0x38	; 56
     922:	91 e0       	ldi	r25, 0x01	; 1
     924:	21 50       	subi	r18, 0x01	; 1
     926:	80 40       	sbci	r24, 0x00	; 0
     928:	90 40       	sbci	r25, 0x00	; 0
     92a:	e1 f7       	brne	.-8      	; 0x924 <__stack+0x25>
     92c:	00 c0       	rjmp	.+0      	; 0x92e <__stack+0x2f>
     92e:	00 00       	nop
				rgb_color_set_rgb(0, 0, 0);			_delay_ms(50);
     930:	40 e0       	ldi	r20, 0x00	; 0
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	80 e0       	ldi	r24, 0x00	; 0
     936:	0e 94 ab 0a 	call	0x1556	; 0x1556 <rgb_color_set_rgb>
     93a:	2f e7       	ldi	r18, 0x7F	; 127
     93c:	88 e3       	ldi	r24, 0x38	; 56
     93e:	91 e0       	ldi	r25, 0x01	; 1
     940:	21 50       	subi	r18, 0x01	; 1
     942:	80 40       	sbci	r24, 0x00	; 0
     944:	90 40       	sbci	r25, 0x00	; 0
     946:	e1 f7       	brne	.-8      	; 0x940 <__stack+0x41>
     948:	00 c0       	rjmp	.+0      	; 0x94a <__stack+0x4b>
     94a:	00 00       	nop
				rgb_color_set_rgb(255, 165, 0);		_delay_ms(50);
     94c:	40 e0       	ldi	r20, 0x00	; 0
     94e:	65 ea       	ldi	r22, 0xA5	; 165
     950:	8f ef       	ldi	r24, 0xFF	; 255
     952:	0e 94 ab 0a 	call	0x1556	; 0x1556 <rgb_color_set_rgb>
     956:	2f e7       	ldi	r18, 0x7F	; 127
     958:	88 e3       	ldi	r24, 0x38	; 56
     95a:	91 e0       	ldi	r25, 0x01	; 1
     95c:	21 50       	subi	r18, 0x01	; 1
     95e:	80 40       	sbci	r24, 0x00	; 0
     960:	90 40       	sbci	r25, 0x00	; 0
     962:	e1 f7       	brne	.-8      	; 0x95c <__stack+0x5d>
     964:	00 c0       	rjmp	.+0      	; 0x966 <__stack+0x67>
     966:	00 00       	nop
				rgb_color_set_rgb(0, 0, 0);			_delay_ms(50);
     968:	40 e0       	ldi	r20, 0x00	; 0
     96a:	60 e0       	ldi	r22, 0x00	; 0
     96c:	80 e0       	ldi	r24, 0x00	; 0
     96e:	0e 94 ab 0a 	call	0x1556	; 0x1556 <rgb_color_set_rgb>
     972:	2f e7       	ldi	r18, 0x7F	; 127
     974:	88 e3       	ldi	r24, 0x38	; 56
     976:	91 e0       	ldi	r25, 0x01	; 1
     978:	21 50       	subi	r18, 0x01	; 1
     97a:	80 40       	sbci	r24, 0x00	; 0
     97c:	90 40       	sbci	r25, 0x00	; 0
     97e:	e1 f7       	brne	.-8      	; 0x978 <__stack+0x79>
     980:	00 c0       	rjmp	.+0      	; 0x982 <__stack+0x83>
     982:	00 00       	nop
     984:	5c c0       	rjmp	.+184    	; 0xa3e <__stack+0x13f>
				} break;
			case PROGRAM_STATE_POWER_ON: {
				drv8838_set_speeds(0, 0);
     986:	60 e0       	ldi	r22, 0x00	; 0
     988:	70 e0       	ldi	r23, 0x00	; 0
     98a:	80 e0       	ldi	r24, 0x00	; 0
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
				rgb_color_set(rgb_color_multiply(color_function(color_counter, 0, 1000), 0.3));
     992:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_end>
     996:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_end+0x1>
     99a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end+0x2>
     99e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x3>
     9a2:	e1 2c       	mov	r14, r1
     9a4:	f1 2c       	mov	r15, r1
     9a6:	0a e7       	ldi	r16, 0x7A	; 122
     9a8:	14 e4       	ldi	r17, 0x44	; 68
     9aa:	20 e0       	ldi	r18, 0x00	; 0
     9ac:	30 e0       	ldi	r19, 0x00	; 0
     9ae:	a9 01       	movw	r20, r18
     9b0:	0e 94 1d 03 	call	0x63a	; 0x63a <color_function>
     9b4:	2a e9       	ldi	r18, 0x9A	; 154
     9b6:	39 e9       	ldi	r19, 0x99	; 153
     9b8:	49 e9       	ldi	r20, 0x99	; 153
     9ba:	5e e3       	ldi	r21, 0x3E	; 62
     9bc:	0e 94 3e 0a 	call	0x147c	; 0x147c <rgb_color_multiply>
     9c0:	0e 94 b3 0a 	call	0x1566	; 0x1566 <rgb_color_set>
				color_counter +=3;
     9c4:	20 e0       	ldi	r18, 0x00	; 0
     9c6:	30 e0       	ldi	r19, 0x00	; 0
     9c8:	40 e4       	ldi	r20, 0x40	; 64
     9ca:	50 e4       	ldi	r21, 0x40	; 64
     9cc:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_end>
     9d0:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_end+0x1>
     9d4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end+0x2>
     9d8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x3>
     9dc:	0e 94 bd 0a 	call	0x157a	; 0x157a <__addsf3>
     9e0:	6b 01       	movw	r12, r22
     9e2:	7c 01       	movw	r14, r24
				if(color_counter>1000) color_counter = 0;
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	4a e7       	ldi	r20, 0x7A	; 122
     9ea:	54 e4       	ldi	r21, 0x44	; 68
     9ec:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__gesf2>
     9f0:	18 16       	cp	r1, r24
     9f2:	4c f0       	brlt	.+18     	; 0xa06 <__stack+0x107>
				rgb_color_set_rgb(0, 0, 0);			_delay_ms(50);
				} break;
			case PROGRAM_STATE_POWER_ON: {
				drv8838_set_speeds(0, 0);
				rgb_color_set(rgb_color_multiply(color_function(color_counter, 0, 1000), 0.3));
				color_counter +=3;
     9f4:	c0 92 00 01 	sts	0x0100, r12	; 0x800100 <__data_end>
     9f8:	d0 92 01 01 	sts	0x0101, r13	; 0x800101 <__data_end+0x1>
     9fc:	e0 92 02 01 	sts	0x0102, r14	; 0x800102 <__data_end+0x2>
     a00:	f0 92 03 01 	sts	0x0103, r15	; 0x800103 <__data_end+0x3>
     a04:	1c c0       	rjmp	.+56     	; 0xa3e <__stack+0x13f>
				if(color_counter>1000) color_counter = 0;
     a06:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
     a0a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_end+0x1>
     a0e:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end+0x2>
     a12:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x3>
     a16:	13 c0       	rjmp	.+38     	; 0xa3e <__stack+0x13f>
				} break;
			case PROGRAM_STATE_STARTED:	{
				rgb_color_set_rgb(0, 100, 0);
     a18:	40 e0       	ldi	r20, 0x00	; 0
     a1a:	64 e6       	ldi	r22, 0x64	; 100
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	0e 94 ab 0a 	call	0x1556	; 0x1556 <rgb_color_set_rgb>
				
				//main program
				
				main_program();
     a22:	0e 94 b9 00 	call	0x172	; 0x172 <main_program>
				
				} break;
     a26:	0b c0       	rjmp	.+22     	; 0xa3e <__stack+0x13f>
			case PROGRAM_STATE_STOPPED_SAFE: {
				drv8838_set_speeds(0, 0);
     a28:	60 e0       	ldi	r22, 0x00	; 0
     a2a:	70 e0       	ldi	r23, 0x00	; 0
     a2c:	80 e0       	ldi	r24, 0x00	; 0
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
				rgb_color_set_rgb(100, 0, 0);
     a34:	40 e0       	ldi	r20, 0x00	; 0
     a36:	60 e0       	ldi	r22, 0x00	; 0
     a38:	84 e6       	ldi	r24, 0x64	; 100
     a3a:	0e 94 ab 0a 	call	0x1556	; 0x1556 <rgb_color_set_rgb>
     a3e:	8f e1       	ldi	r24, 0x1F	; 31
     a40:	9e e4       	ldi	r25, 0x4E	; 78
     a42:	01 97       	sbiw	r24, 0x01	; 1
     a44:	f1 f7       	brne	.-4      	; 0xa42 <__stack+0x143>
     a46:	00 c0       	rjmp	.+0      	; 0xa48 <__stack+0x149>
     a48:	00 00       	nop
     a4a:	4f cf       	rjmp	.-354    	; 0x8ea <main+0x64>

00000a4c <drv8838_fix>:
	}
}

uint8_t qtr1a_get_horizon() {
	return 2*qtr1a_get_state(LEFT) + qtr1a_get_state(RIGHT);
}
     a4c:	8f 3f       	cpi	r24, 0xFF	; 255
     a4e:	91 05       	cpc	r25, r1
     a50:	19 f0       	breq	.+6      	; 0xa58 <drv8838_fix+0xc>
     a52:	14 f0       	brlt	.+4      	; 0xa58 <drv8838_fix+0xc>
     a54:	8f ef       	ldi	r24, 0xFF	; 255
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	81 30       	cpi	r24, 0x01	; 1
     a5a:	2f ef       	ldi	r18, 0xFF	; 255
     a5c:	92 07       	cpc	r25, r18
     a5e:	14 f4       	brge	.+4      	; 0xa64 <drv8838_fix+0x18>
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	9f ef       	ldi	r25, 0xFF	; 255
     a64:	08 95       	ret

00000a66 <drv8838_set_speed>:
     a66:	cf 93       	push	r28
     a68:	df 93       	push	r29
     a6a:	81 11       	cpse	r24, r1
     a6c:	08 c0       	rjmp	.+16     	; 0xa7e <drv8838_set_speed+0x18>
     a6e:	cb 01       	movw	r24, r22
     a70:	0e 94 26 05 	call	0xa4c	; 0xa4c <drv8838_fix>
     a74:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <drv8838_power+0x1>
     a78:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <drv8838_power>
     a7c:	31 c0       	rjmp	.+98     	; 0xae0 <drv8838_set_speed+0x7a>
     a7e:	81 30       	cpi	r24, 0x01	; 1
     a80:	41 f4       	brne	.+16     	; 0xa92 <drv8838_set_speed+0x2c>
     a82:	cb 01       	movw	r24, r22
     a84:	0e 94 26 05 	call	0xa4c	; 0xa4c <drv8838_fix>
     a88:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <drv8838_power+0x3>
     a8c:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <drv8838_power+0x2>
     a90:	05 c0       	rjmp	.+10     	; 0xa9c <drv8838_set_speed+0x36>
     a92:	88 23       	and	r24, r24
     a94:	29 f1       	breq	.+74     	; 0xae0 <drv8838_set_speed+0x7a>
     a96:	81 30       	cpi	r24, 0x01	; 1
     a98:	09 f0       	breq	.+2      	; 0xa9c <drv8838_set_speed+0x36>
     a9a:	47 c0       	rjmp	.+142    	; 0xb2a <drv8838_set_speed+0xc4>
     a9c:	c0 91 b6 01 	lds	r28, 0x01B6	; 0x8001b6 <drv8838_power+0x2>
     aa0:	d0 91 b7 01 	lds	r29, 0x01B7	; 0x8001b7 <drv8838_power+0x3>
     aa4:	be 01       	movw	r22, r28
     aa6:	0d 2e       	mov	r0, r29
     aa8:	00 0c       	add	r0, r0
     aaa:	88 0b       	sbc	r24, r24
     aac:	99 0b       	sbc	r25, r25
     aae:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     ab2:	9f 77       	andi	r25, 0x7F	; 127
     ab4:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
     ab8:	67 bd       	out	0x27, r22	; 39
     aba:	20 97       	sbiw	r28, 0x00	; 0
     abc:	b1 f1       	breq	.+108    	; 0xb2a <drv8838_set_speed+0xc4>
     abe:	81 e0       	ldi	r24, 0x01	; 1
     ac0:	90 91 ba 01 	lds	r25, 0x01BA	; 0x8001ba <drv8838_rotate+0x1>
     ac4:	92 30       	cpi	r25, 0x02	; 2
     ac6:	09 f4       	brne	.+2      	; 0xaca <drv8838_set_speed+0x64>
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	91 e0       	ldi	r25, 0x01	; 1
     acc:	1c 16       	cp	r1, r28
     ace:	1d 06       	cpc	r1, r29
     ad0:	0c f0       	brlt	.+2      	; 0xad4 <drv8838_set_speed+0x6e>
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	89 17       	cp	r24, r25
     ad6:	11 f0       	breq	.+4      	; 0xadc <drv8838_set_speed+0x76>
     ad8:	5f 9a       	sbi	0x0b, 7	; 11
     ada:	27 c0       	rjmp	.+78     	; 0xb2a <drv8838_set_speed+0xc4>
     adc:	5f 98       	cbi	0x0b, 7	; 11
     ade:	25 c0       	rjmp	.+74     	; 0xb2a <drv8838_set_speed+0xc4>
     ae0:	c4 eb       	ldi	r28, 0xB4	; 180
     ae2:	d1 e0       	ldi	r29, 0x01	; 1
     ae4:	68 81       	ld	r22, Y
     ae6:	79 81       	ldd	r23, Y+1	; 0x01
     ae8:	07 2e       	mov	r0, r23
     aea:	00 0c       	add	r0, r0
     aec:	88 0b       	sbc	r24, r24
     aee:	99 0b       	sbc	r25, r25
     af0:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     af4:	9f 77       	andi	r25, 0x7F	; 127
     af6:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
     afa:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     afe:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     b02:	88 81       	ld	r24, Y
     b04:	99 81       	ldd	r25, Y+1	; 0x01
     b06:	00 97       	sbiw	r24, 0x00	; 0
     b08:	81 f0       	breq	.+32     	; 0xb2a <drv8838_set_speed+0xc4>
     b0a:	21 e0       	ldi	r18, 0x01	; 1
     b0c:	30 91 b9 01 	lds	r19, 0x01B9	; 0x8001b9 <drv8838_rotate>
     b10:	32 30       	cpi	r19, 0x02	; 2
     b12:	09 f4       	brne	.+2      	; 0xb16 <drv8838_set_speed+0xb0>
     b14:	20 e0       	ldi	r18, 0x00	; 0
     b16:	31 e0       	ldi	r19, 0x01	; 1
     b18:	18 16       	cp	r1, r24
     b1a:	19 06       	cpc	r1, r25
     b1c:	0c f0       	brlt	.+2      	; 0xb20 <drv8838_set_speed+0xba>
     b1e:	30 e0       	ldi	r19, 0x00	; 0
     b20:	23 17       	cp	r18, r19
     b22:	11 f0       	breq	.+4      	; 0xb28 <drv8838_set_speed+0xc2>
     b24:	2a 9a       	sbi	0x05, 2	; 5
     b26:	01 c0       	rjmp	.+2      	; 0xb2a <drv8838_set_speed+0xc4>
     b28:	2a 98       	cbi	0x05, 2	; 5
     b2a:	df 91       	pop	r29
     b2c:	cf 91       	pop	r28
     b2e:	08 95       	ret

00000b30 <drv8838_set_speeds>:
     b30:	cf 93       	push	r28
     b32:	df 93       	push	r29
     b34:	eb 01       	movw	r28, r22
     b36:	bc 01       	movw	r22, r24
     b38:	80 e0       	ldi	r24, 0x00	; 0
     b3a:	0e 94 33 05 	call	0xa66	; 0xa66 <drv8838_set_speed>
     b3e:	be 01       	movw	r22, r28
     b40:	81 e0       	ldi	r24, 0x01	; 1
     b42:	0e 94 33 05 	call	0xa66	; 0xa66 <drv8838_set_speed>
     b46:	df 91       	pop	r29
     b48:	cf 91       	pop	r28
     b4a:	08 95       	ret

00000b4c <drv8838_initialize>:
     b4c:	e9 eb       	ldi	r30, 0xB9	; 185
     b4e:	f1 e0       	ldi	r31, 0x01	; 1
     b50:	80 83       	st	Z, r24
     b52:	61 83       	std	Z+1, r22	; 0x01
     b54:	e4 eb       	ldi	r30, 0xB4	; 180
     b56:	f1 e0       	ldi	r31, 0x01	; 1
     b58:	11 82       	std	Z+1, r1	; 0x01
     b5a:	10 82       	st	Z, r1
     b5c:	13 82       	std	Z+3, r1	; 0x03
     b5e:	12 82       	std	Z+2, r1	; 0x02
     b60:	8a b1       	in	r24, 0x0a	; 10
     b62:	80 6c       	ori	r24, 0xC0	; 192
     b64:	8a b9       	out	0x0a, r24	; 10
     b66:	84 b1       	in	r24, 0x04	; 4
     b68:	86 60       	ori	r24, 0x06	; 6
     b6a:	84 b9       	out	0x04, r24	; 4
     b6c:	84 b5       	in	r24, 0x24	; 36
     b6e:	83 68       	ori	r24, 0x83	; 131
     b70:	84 bd       	out	0x24, r24	; 36
     b72:	85 b5       	in	r24, 0x25	; 37
     b74:	81 60       	ori	r24, 0x01	; 1
     b76:	85 bd       	out	0x25, r24	; 37
     b78:	e0 e8       	ldi	r30, 0x80	; 128
     b7a:	f0 e0       	ldi	r31, 0x00	; 0
     b7c:	80 81       	ld	r24, Z
     b7e:	81 68       	ori	r24, 0x81	; 129
     b80:	80 83       	st	Z, r24
     b82:	e1 e8       	ldi	r30, 0x81	; 129
     b84:	f0 e0       	ldi	r31, 0x00	; 0
     b86:	80 81       	ld	r24, Z
     b88:	89 60       	ori	r24, 0x09	; 9
     b8a:	80 83       	st	Z, r24
     b8c:	60 e0       	ldi	r22, 0x00	; 0
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	80 e0       	ldi	r24, 0x00	; 0
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
     b98:	08 95       	ret

00000b9a <ir38khz_initialize>:
     b9a:	87 b1       	in	r24, 0x07	; 7
     b9c:	87 7c       	andi	r24, 0xC7	; 199
     b9e:	87 b9       	out	0x07, r24	; 7
     ba0:	84 b1       	in	r24, 0x04	; 4
     ba2:	8f 73       	andi	r24, 0x3F	; 63
     ba4:	84 b9       	out	0x04, r24	; 4
     ba6:	88 b1       	in	r24, 0x08	; 8
     ba8:	88 63       	ori	r24, 0x38	; 56
     baa:	88 b9       	out	0x08, r24	; 8
     bac:	85 b1       	in	r24, 0x05	; 5
     bae:	80 6c       	ori	r24, 0xC0	; 192
     bb0:	85 b9       	out	0x05, r24	; 5
     bb2:	08 95       	ret

00000bb4 <ir38khz_get_state_raw>:
     bb4:	82 30       	cpi	r24, 0x02	; 2
     bb6:	c1 f0       	breq	.+48     	; 0xbe8 <ir38khz_get_state_raw+0x34>
     bb8:	28 f4       	brcc	.+10     	; 0xbc4 <ir38khz_get_state_raw+0x10>
     bba:	88 23       	and	r24, r24
     bbc:	41 f0       	breq	.+16     	; 0xbce <ir38khz_get_state_raw+0x1a>
     bbe:	81 30       	cpi	r24, 0x01	; 1
     bc0:	69 f0       	breq	.+26     	; 0xbdc <ir38khz_get_state_raw+0x28>
     bc2:	26 c0       	rjmp	.+76     	; 0xc10 <ir38khz_get_state_raw+0x5c>
     bc4:	83 30       	cpi	r24, 0x03	; 3
     bc6:	b9 f0       	breq	.+46     	; 0xbf6 <ir38khz_get_state_raw+0x42>
     bc8:	84 30       	cpi	r24, 0x04	; 4
     bca:	d9 f0       	breq	.+54     	; 0xc02 <ir38khz_get_state_raw+0x4e>
     bcc:	21 c0       	rjmp	.+66     	; 0xc10 <ir38khz_get_state_raw+0x5c>
     bce:	86 b1       	in	r24, 0x06	; 6
     bd0:	83 fb       	bst	r24, 3
     bd2:	99 27       	eor	r25, r25
     bd4:	90 f9       	bld	r25, 0
     bd6:	81 e0       	ldi	r24, 0x01	; 1
     bd8:	89 27       	eor	r24, r25
     bda:	08 95       	ret
     bdc:	86 b1       	in	r24, 0x06	; 6
     bde:	82 95       	swap	r24
     be0:	81 70       	andi	r24, 0x01	; 1
     be2:	91 e0       	ldi	r25, 0x01	; 1
     be4:	89 27       	eor	r24, r25
     be6:	08 95       	ret
     be8:	86 b1       	in	r24, 0x06	; 6
     bea:	85 fb       	bst	r24, 5
     bec:	99 27       	eor	r25, r25
     bee:	90 f9       	bld	r25, 0
     bf0:	81 e0       	ldi	r24, 0x01	; 1
     bf2:	89 27       	eor	r24, r25
     bf4:	08 95       	ret
     bf6:	83 b1       	in	r24, 0x03	; 3
     bf8:	80 95       	com	r24
     bfa:	88 1f       	adc	r24, r24
     bfc:	88 27       	eor	r24, r24
     bfe:	88 1f       	adc	r24, r24
     c00:	08 95       	ret
     c02:	83 b1       	in	r24, 0x03	; 3
     c04:	86 fb       	bst	r24, 6
     c06:	99 27       	eor	r25, r25
     c08:	90 f9       	bld	r25, 0
     c0a:	81 e0       	ldi	r24, 0x01	; 1
     c0c:	89 27       	eor	r24, r25
     c0e:	08 95       	ret
     c10:	80 e0       	ldi	r24, 0x00	; 0
     c12:	08 95       	ret

00000c14 <ir38khz_get_state>:
     c14:	ff 92       	push	r15
     c16:	0f 93       	push	r16
     c18:	1f 93       	push	r17
     c1a:	cf 93       	push	r28
     c1c:	df 93       	push	r29
     c1e:	f8 2e       	mov	r15, r24
     c20:	ca e0       	ldi	r28, 0x0A	; 10
     c22:	d0 e0       	ldi	r29, 0x00	; 0
     c24:	00 e0       	ldi	r16, 0x00	; 0
     c26:	10 e0       	ldi	r17, 0x00	; 0
     c28:	8f 2d       	mov	r24, r15
     c2a:	0e 94 da 05 	call	0xbb4	; 0xbb4 <ir38khz_get_state_raw>
     c2e:	08 0f       	add	r16, r24
     c30:	11 1d       	adc	r17, r1
     c32:	21 97       	sbiw	r28, 0x01	; 1
     c34:	c9 f7       	brne	.-14     	; 0xc28 <ir38khz_get_state+0x14>
     c36:	81 e0       	ldi	r24, 0x01	; 1
     c38:	07 30       	cpi	r16, 0x07	; 7
     c3a:	11 05       	cpc	r17, r1
     c3c:	0c f4       	brge	.+2      	; 0xc40 <ir38khz_get_state+0x2c>
     c3e:	80 e0       	ldi	r24, 0x00	; 0
     c40:	df 91       	pop	r29
     c42:	cf 91       	pop	r28
     c44:	1f 91       	pop	r17
     c46:	0f 91       	pop	r16
     c48:	ff 90       	pop	r15
     c4a:	08 95       	ret

00000c4c <ir38khz_get_error>:
     c4c:	8f 92       	push	r8
     c4e:	9f 92       	push	r9
     c50:	af 92       	push	r10
     c52:	bf 92       	push	r11
     c54:	cf 92       	push	r12
     c56:	df 92       	push	r13
     c58:	ef 92       	push	r14
     c5a:	ff 92       	push	r15
     c5c:	0f 93       	push	r16
     c5e:	1f 93       	push	r17
     c60:	cf 93       	push	r28
     c62:	0e ef       	ldi	r16, 0xFE	; 254
     c64:	1f ef       	ldi	r17, 0xFF	; 255
     c66:	c0 e0       	ldi	r28, 0x00	; 0
     c68:	c1 2c       	mov	r12, r1
     c6a:	d1 2c       	mov	r13, r1
     c6c:	e1 2c       	mov	r14, r1
     c6e:	f1 2c       	mov	r15, r1
     c70:	8c 2f       	mov	r24, r28
     c72:	0e 94 0a 06 	call	0xc14	; 0xc14 <ir38khz_get_state>
     c76:	88 23       	and	r24, r24
     c78:	29 f0       	breq	.+10     	; 0xc84 <ir38khz_get_error+0x38>
     c7a:	8f ef       	ldi	r24, 0xFF	; 255
     c7c:	e8 1a       	sub	r14, r24
     c7e:	f8 0a       	sbc	r15, r24
     c80:	c0 0e       	add	r12, r16
     c82:	d1 1e       	adc	r13, r17
     c84:	cf 5f       	subi	r28, 0xFF	; 255
     c86:	0f 5f       	subi	r16, 0xFF	; 255
     c88:	1f 4f       	sbci	r17, 0xFF	; 255
     c8a:	c5 30       	cpi	r28, 0x05	; 5
     c8c:	89 f7       	brne	.-30     	; 0xc70 <ir38khz_get_error+0x24>
     c8e:	b6 01       	movw	r22, r12
     c90:	dd 0c       	add	r13, r13
     c92:	88 0b       	sbc	r24, r24
     c94:	99 0b       	sbc	r25, r25
     c96:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     c9a:	4b 01       	movw	r8, r22
     c9c:	5c 01       	movw	r10, r24
     c9e:	b7 01       	movw	r22, r14
     ca0:	ff 0c       	add	r15, r15
     ca2:	88 0b       	sbc	r24, r24
     ca4:	99 0b       	sbc	r25, r25
     ca6:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     caa:	9b 01       	movw	r18, r22
     cac:	ac 01       	movw	r20, r24
     cae:	c5 01       	movw	r24, r10
     cb0:	b4 01       	movw	r22, r8
     cb2:	0e 94 b7 0b 	call	0x176e	; 0x176e <__divsf3>
     cb6:	cf 91       	pop	r28
     cb8:	1f 91       	pop	r17
     cba:	0f 91       	pop	r16
     cbc:	ff 90       	pop	r15
     cbe:	ef 90       	pop	r14
     cc0:	df 90       	pop	r13
     cc2:	cf 90       	pop	r12
     cc4:	bf 90       	pop	r11
     cc6:	af 90       	pop	r10
     cc8:	9f 90       	pop	r9
     cca:	8f 90       	pop	r8
     ccc:	08 95       	ret

00000cce <qtr1a_get_state_raw>:
     cce:	ec e7       	ldi	r30, 0x7C	; 124
     cd0:	f0 e0       	ldi	r31, 0x00	; 0
     cd2:	90 81       	ld	r25, Z
     cd4:	90 7f       	andi	r25, 0xF0	; 240
     cd6:	90 83       	st	Z, r25
     cd8:	88 23       	and	r24, r24
     cda:	19 f0       	breq	.+6      	; 0xce2 <qtr1a_get_state_raw+0x14>
     cdc:	81 30       	cpi	r24, 0x01	; 1
     cde:	39 f0       	breq	.+14     	; 0xcee <qtr1a_get_state_raw+0x20>
     ce0:	0b c0       	rjmp	.+22     	; 0xcf8 <qtr1a_get_state_raw+0x2a>
     ce2:	ec e7       	ldi	r30, 0x7C	; 124
     ce4:	f0 e0       	ldi	r31, 0x00	; 0
     ce6:	80 81       	ld	r24, Z
     ce8:	82 60       	ori	r24, 0x02	; 2
     cea:	80 83       	st	Z, r24
     cec:	05 c0       	rjmp	.+10     	; 0xcf8 <qtr1a_get_state_raw+0x2a>
     cee:	ec e7       	ldi	r30, 0x7C	; 124
     cf0:	f0 e0       	ldi	r31, 0x00	; 0
     cf2:	80 81       	ld	r24, Z
     cf4:	81 60       	ori	r24, 0x01	; 1
     cf6:	80 83       	st	Z, r24
     cf8:	ea e7       	ldi	r30, 0x7A	; 122
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	80 81       	ld	r24, Z
     cfe:	80 64       	ori	r24, 0x40	; 64
     d00:	80 83       	st	Z, r24
     d02:	80 81       	ld	r24, Z
     d04:	86 fd       	sbrc	r24, 6
     d06:	fd cf       	rjmp	.-6      	; 0xd02 <qtr1a_get_state_raw+0x34>
     d08:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     d0c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     d10:	08 95       	ret

00000d12 <qtr1a_get_state>:
     d12:	8f 92       	push	r8
     d14:	9f 92       	push	r9
     d16:	af 92       	push	r10
     d18:	bf 92       	push	r11
     d1a:	cf 92       	push	r12
     d1c:	df 92       	push	r13
     d1e:	ef 92       	push	r14
     d20:	ff 92       	push	r15
     d22:	0f 93       	push	r16
     d24:	1f 93       	push	r17
     d26:	cf 93       	push	r28
     d28:	df 93       	push	r29
     d2a:	b8 2e       	mov	r11, r24
     d2c:	c5 e0       	ldi	r28, 0x05	; 5
     d2e:	d0 e0       	ldi	r29, 0x00	; 0
     d30:	00 e0       	ldi	r16, 0x00	; 0
     d32:	10 e0       	ldi	r17, 0x00	; 0
     d34:	cc 24       	eor	r12, r12
     d36:	c3 94       	inc	r12
     d38:	81 2c       	mov	r8, r1
     d3a:	dd 24       	eor	r13, r13
     d3c:	d3 94       	inc	r13
     d3e:	e1 2c       	mov	r14, r1
     d40:	91 2c       	mov	r9, r1
     d42:	a1 2c       	mov	r10, r1
     d44:	f0 90 07 01 	lds	r15, 0x0107	; 0x800107 <qtr1a_inv>
     d48:	8b 2d       	mov	r24, r11
     d4a:	0e 94 67 06 	call	0xcce	; 0xcce <qtr1a_get_state_raw>
     d4e:	2c 2d       	mov	r18, r12
     d50:	40 91 56 01 	lds	r20, 0x0156	; 0x800156 <qtr1a_trigger>
     d54:	50 91 57 01 	lds	r21, 0x0157	; 0x800157 <qtr1a_trigger+0x1>
     d58:	84 17       	cp	r24, r20
     d5a:	95 07       	cpc	r25, r21
     d5c:	08 f0       	brcs	.+2      	; 0xd60 <qtr1a_get_state+0x4e>
     d5e:	28 2d       	mov	r18, r8
     d60:	8d 2d       	mov	r24, r13
     d62:	9e 2d       	mov	r25, r14
     d64:	2f 15       	cp	r18, r15
     d66:	11 f0       	breq	.+4      	; 0xd6c <qtr1a_get_state+0x5a>
     d68:	89 2d       	mov	r24, r9
     d6a:	9a 2d       	mov	r25, r10
     d6c:	08 0f       	add	r16, r24
     d6e:	19 1f       	adc	r17, r25
     d70:	21 97       	sbiw	r28, 0x01	; 1
     d72:	41 f7       	brne	.-48     	; 0xd44 <qtr1a_get_state+0x32>
     d74:	81 e0       	ldi	r24, 0x01	; 1
     d76:	03 30       	cpi	r16, 0x03	; 3
     d78:	11 05       	cpc	r17, r1
     d7a:	0c f4       	brge	.+2      	; 0xd7e <qtr1a_get_state+0x6c>
     d7c:	80 e0       	ldi	r24, 0x00	; 0
     d7e:	df 91       	pop	r29
     d80:	cf 91       	pop	r28
     d82:	1f 91       	pop	r17
     d84:	0f 91       	pop	r16
     d86:	ff 90       	pop	r15
     d88:	ef 90       	pop	r14
     d8a:	df 90       	pop	r13
     d8c:	cf 90       	pop	r12
     d8e:	bf 90       	pop	r11
     d90:	af 90       	pop	r10
     d92:	9f 90       	pop	r9
     d94:	8f 90       	pop	r8
     d96:	08 95       	ret

00000d98 <qtr1a_set_mode>:
     d98:	cf 93       	push	r28
     d9a:	85 30       	cpi	r24, 0x05	; 5
     d9c:	41 f0       	breq	.+16     	; 0xdae <qtr1a_set_mode+0x16>
     d9e:	86 30       	cpi	r24, 0x06	; 6
     da0:	49 f0       	breq	.+18     	; 0xdb4 <qtr1a_set_mode+0x1c>
     da2:	84 30       	cpi	r24, 0x04	; 4
     da4:	a1 f4       	brne	.+40     	; 0xdce <qtr1a_set_mode+0x36>
     da6:	81 e0       	ldi	r24, 0x01	; 1
     da8:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <qtr1a_inv>
     dac:	10 c0       	rjmp	.+32     	; 0xdce <qtr1a_set_mode+0x36>
     dae:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <qtr1a_inv>
     db2:	0d c0       	rjmp	.+26     	; 0xdce <qtr1a_set_mode+0x36>
     db4:	80 e0       	ldi	r24, 0x00	; 0
     db6:	0e 94 89 06 	call	0xd12	; 0xd12 <qtr1a_get_state>
     dba:	c8 2f       	mov	r28, r24
     dbc:	81 e0       	ldi	r24, 0x01	; 1
     dbe:	0e 94 89 06 	call	0xd12	; 0xd12 <qtr1a_get_state>
     dc2:	c8 13       	cpse	r28, r24
     dc4:	04 c0       	rjmp	.+8      	; 0xdce <qtr1a_set_mode+0x36>
     dc6:	81 e0       	ldi	r24, 0x01	; 1
     dc8:	c8 27       	eor	r28, r24
     dca:	c0 93 07 01 	sts	0x0107, r28	; 0x800107 <qtr1a_inv>
     dce:	cf 91       	pop	r28
     dd0:	08 95       	ret

00000dd2 <qtr1a_initialize>:
     dd2:	ec e7       	ldi	r30, 0x7C	; 124
     dd4:	f0 e0       	ldi	r31, 0x00	; 0
     dd6:	90 81       	ld	r25, Z
     dd8:	90 64       	ori	r25, 0x40	; 64
     dda:	90 83       	st	Z, r25
     ddc:	ea e7       	ldi	r30, 0x7A	; 122
     dde:	f0 e0       	ldi	r31, 0x00	; 0
     de0:	90 81       	ld	r25, Z
     de2:	90 68       	ori	r25, 0x80	; 128
     de4:	90 83       	st	Z, r25
     de6:	91 e0       	ldi	r25, 0x01	; 1
     de8:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <qtr1a_inv>
     dec:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <qtr1a_trigger+0x1>
     df0:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <qtr1a_trigger>
     df4:	0e 94 cc 06 	call	0xd98	; 0xd98 <qtr1a_set_mode>
     df8:	08 95       	ret

00000dfa <switch_initialize>:

void switch_initialize() {
	DDRB &= ~(1<<PINB4);
     dfa:	24 98       	cbi	0x04, 4	; 4
	PORTB |= (1<<PINB4);
     dfc:	2c 9a       	sbi	0x05, 4	; 5
     dfe:	08 95       	ret

00000e00 <switch_get_state>:
}

uint8_t switch_get_state() {
	return !(PINB & (1<<PINB4));
     e00:	83 b1       	in	r24, 0x03	; 3
     e02:	82 95       	swap	r24
     e04:	81 70       	andi	r24, 0x01	; 1
}
     e06:	91 e0       	ldi	r25, 0x01	; 1
     e08:	89 27       	eor	r24, r25
     e0a:	08 95       	ret

00000e0c <button_initialize>:

void button_initialize() {
	DDRC &= ~(1<<PINC0);
     e0c:	38 98       	cbi	0x07, 0	; 7
	PORTC |= (1<<PINC0);
     e0e:	40 9a       	sbi	0x08, 0	; 8
     e10:	08 95       	ret

00000e12 <button_get_state>:
}

bool button_get_state() {
	return !(PINC & (1<<PINC0));
     e12:	86 b1       	in	r24, 0x06	; 6
     e14:	80 95       	com	r24
}
     e16:	81 70       	andi	r24, 0x01	; 1
     e18:	08 95       	ret

00000e1a <eeprom_write>:

void eeprom_write(uint8_t address, uint8_t data) {
	while(EECR & (1<<EEPE)) {}
     e1a:	f9 99       	sbic	0x1f, 1	; 31
     e1c:	fe cf       	rjmp	.-4      	; 0xe1a <eeprom_write>
	
	EECR = (0<<EEPM1) | (0<<EEPM0);
     e1e:	1f ba       	out	0x1f, r1	; 31
	
	if(address<512) EEAR = address;
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	92 bd       	out	0x22, r25	; 34
     e24:	81 bd       	out	0x21, r24	; 33
	else EEAR = 511;
	
	EEDR = data;
     e26:	60 bd       	out	0x20, r22	; 32
	
	EECR |= (1<<EEMPE);
     e28:	fa 9a       	sbi	0x1f, 2	; 31
	EECR |= (1<<EEPE);
     e2a:	f9 9a       	sbi	0x1f, 1	; 31
     e2c:	08 95       	ret

00000e2e <eeprom_read>:
}

uint8_t eeprom_read(uint8_t address) {
	while(EECR & (1<<EEPE)) {}
     e2e:	f9 99       	sbic	0x1f, 1	; 31
     e30:	fe cf       	rjmp	.-4      	; 0xe2e <eeprom_read>
	
	EEAR = address;
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	92 bd       	out	0x22, r25	; 34
     e36:	81 bd       	out	0x21, r24	; 33
	
	EECR |= (1<<EERE);
     e38:	f8 9a       	sbi	0x1f, 0	; 31
	
	return EEDR;
     e3a:	80 b5       	in	r24, 0x20	; 32
}
     e3c:	08 95       	ret

00000e3e <rotate>:

void rotate(double phi, bool dir, int16_t speed) {
     e3e:	cf 92       	push	r12
     e40:	df 92       	push	r13
     e42:	ef 92       	push	r14
     e44:	ff 92       	push	r15
     e46:	1f 93       	push	r17
     e48:	cf 93       	push	r28
     e4a:	df 93       	push	r29
     e4c:	14 2f       	mov	r17, r20
     e4e:	e9 01       	movw	r28, r18
	double S = phi*(WHEEL_SPACING/2) *2;
	double l = 2*M_PI*WHEEL_RADIUS;
	double rounds = S/l;
	double rotateTime = rounds/(speed*POWER_SCALE);
     e50:	2a e9       	ldi	r18, 0x9A	; 154
     e52:	39 e9       	ldi	r19, 0x99	; 153
     e54:	49 e1       	ldi	r20, 0x19	; 25
     e56:	5d e3       	ldi	r21, 0x3D	; 61
     e58:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     e5c:	9b 01       	movw	r18, r22
     e5e:	ac 01       	movw	r20, r24
     e60:	0e 94 bd 0a 	call	0x157a	; 0x157a <__addsf3>
     e64:	24 e1       	ldi	r18, 0x14	; 20
     e66:	34 e7       	ldi	r19, 0x74	; 116
     e68:	47 ec       	ldi	r20, 0xC7	; 199
     e6a:	5d e3       	ldi	r21, 0x3D	; 61
     e6c:	0e 94 b7 0b 	call	0x176e	; 0x176e <__divsf3>
     e70:	6b 01       	movw	r12, r22
     e72:	7c 01       	movw	r14, r24
     e74:	be 01       	movw	r22, r28
     e76:	0d 2e       	mov	r0, r29
     e78:	00 0c       	add	r0, r0
     e7a:	88 0b       	sbc	r24, r24
     e7c:	99 0b       	sbc	r25, r25
     e7e:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     e82:	21 ed       	ldi	r18, 0xD1	; 209
     e84:	30 ed       	ldi	r19, 0xD0	; 208
     e86:	40 ed       	ldi	r20, 0xD0	; 208
     e88:	5d e3       	ldi	r21, 0x3D	; 61
     e8a:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     e8e:	9b 01       	movw	r18, r22
     e90:	ac 01       	movw	r20, r24
     e92:	c7 01       	movw	r24, r14
     e94:	b6 01       	movw	r22, r12
     e96:	0e 94 b7 0b 	call	0x176e	; 0x176e <__divsf3>
     e9a:	6b 01       	movw	r12, r22
     e9c:	7c 01       	movw	r14, r24
	
	if(dir) drv8838_set_speeds(speed, -speed);
     e9e:	11 23       	and	r17, r17
     ea0:	41 f0       	breq	.+16     	; 0xeb2 <rotate+0x74>
     ea2:	66 27       	eor	r22, r22
     ea4:	77 27       	eor	r23, r23
     ea6:	6c 1b       	sub	r22, r28
     ea8:	7d 0b       	sbc	r23, r29
     eaa:	ce 01       	movw	r24, r28
     eac:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
     eb0:	07 c0       	rjmp	.+14     	; 0xec0 <rotate+0x82>
	else drv8838_set_speeds(-speed, speed);
     eb2:	be 01       	movw	r22, r28
     eb4:	88 27       	eor	r24, r24
     eb6:	99 27       	eor	r25, r25
     eb8:	8c 1b       	sub	r24, r28
     eba:	9d 0b       	sbc	r25, r29
     ebc:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
	
	for(int i=0; i<rotateTime*100; i++)
     ec0:	20 e0       	ldi	r18, 0x00	; 0
     ec2:	30 e0       	ldi	r19, 0x00	; 0
     ec4:	48 ec       	ldi	r20, 0xC8	; 200
     ec6:	52 e4       	ldi	r21, 0x42	; 66
     ec8:	c7 01       	movw	r24, r14
     eca:	b6 01       	movw	r22, r12
     ecc:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
     ed0:	6b 01       	movw	r12, r22
     ed2:	7c 01       	movw	r14, r24
     ed4:	20 e0       	ldi	r18, 0x00	; 0
     ed6:	30 e0       	ldi	r19, 0x00	; 0
     ed8:	a9 01       	movw	r20, r18
     eda:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__gesf2>
     ede:	18 16       	cp	r1, r24
     ee0:	b4 f4       	brge	.+44     	; 0xf0e <rotate+0xd0>
     ee2:	c0 e0       	ldi	r28, 0x00	; 0
     ee4:	d0 e0       	ldi	r29, 0x00	; 0
     ee6:	8f e1       	ldi	r24, 0x1F	; 31
     ee8:	9e e4       	ldi	r25, 0x4E	; 78
     eea:	01 97       	sbiw	r24, 0x01	; 1
     eec:	f1 f7       	brne	.-4      	; 0xeea <rotate+0xac>
     eee:	00 c0       	rjmp	.+0      	; 0xef0 <rotate+0xb2>
     ef0:	00 00       	nop
     ef2:	21 96       	adiw	r28, 0x01	; 1
     ef4:	be 01       	movw	r22, r28
     ef6:	0d 2e       	mov	r0, r29
     ef8:	00 0c       	add	r0, r0
     efa:	88 0b       	sbc	r24, r24
     efc:	99 0b       	sbc	r25, r25
     efe:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
     f02:	a7 01       	movw	r20, r14
     f04:	96 01       	movw	r18, r12
     f06:	0e 94 b2 0b 	call	0x1764	; 0x1764 <__cmpsf2>
     f0a:	88 23       	and	r24, r24
     f0c:	64 f3       	brlt	.-40     	; 0xee6 <rotate+0xa8>
	_delay_ms(10);
	
	drv8838_set_speeds(0, 0);
     f0e:	60 e0       	ldi	r22, 0x00	; 0
     f10:	70 e0       	ldi	r23, 0x00	; 0
     f12:	80 e0       	ldi	r24, 0x00	; 0
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	0e 94 98 05 	call	0xb30	; 0xb30 <drv8838_set_speeds>
     f1a:	9f ef       	ldi	r25, 0xFF	; 255
     f1c:	20 e7       	ldi	r18, 0x70	; 112
     f1e:	82 e0       	ldi	r24, 0x02	; 2
     f20:	91 50       	subi	r25, 0x01	; 1
     f22:	20 40       	sbci	r18, 0x00	; 0
     f24:	80 40       	sbci	r24, 0x00	; 0
     f26:	e1 f7       	brne	.-8      	; 0xf20 <rotate+0xe2>
     f28:	00 c0       	rjmp	.+0      	; 0xf2a <rotate+0xec>
     f2a:	00 00       	nop
	_delay_ms(100);
     f2c:	df 91       	pop	r29
     f2e:	cf 91       	pop	r28
     f30:	1f 91       	pop	r17
     f32:	ff 90       	pop	r15
     f34:	ef 90       	pop	r14
     f36:	df 90       	pop	r13
     f38:	cf 90       	pop	r12
     f3a:	08 95       	ret

00000f3c <pid_initialize>:
#include "pid.h"

void pid_initialize(uint8_t index, double Kp_a, double Ki_a, double Kd_a) {
     f3c:	cf 92       	push	r12
     f3e:	df 92       	push	r13
     f40:	ef 92       	push	r14
     f42:	ff 92       	push	r15
     f44:	0f 93       	push	r16
     f46:	1f 93       	push	r17
	pid_database[index].Kp = Kp_a;
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	fc 01       	movw	r30, r24
     f4c:	ee 0f       	add	r30, r30
     f4e:	ff 1f       	adc	r31, r31
     f50:	df 01       	movw	r26, r30
     f52:	a8 0f       	add	r26, r24
     f54:	b9 1f       	adc	r27, r25
     f56:	aa 0f       	add	r26, r26
     f58:	bb 1f       	adc	r27, r27
     f5a:	aa 0f       	add	r26, r26
     f5c:	bb 1f       	adc	r27, r27
     f5e:	aa 0f       	add	r26, r26
     f60:	bb 1f       	adc	r27, r27
     f62:	a5 5a       	subi	r26, 0xA5	; 165
     f64:	be 4f       	sbci	r27, 0xFE	; 254
     f66:	4d 93       	st	X+, r20
     f68:	5d 93       	st	X+, r21
     f6a:	6d 93       	st	X+, r22
     f6c:	7c 93       	st	X, r23
     f6e:	13 97       	sbiw	r26, 0x03	; 3
	pid_database[index].Ki = Ki_a;
     f70:	14 96       	adiw	r26, 0x04	; 4
     f72:	0d 93       	st	X+, r16
     f74:	1d 93       	st	X+, r17
     f76:	2d 93       	st	X+, r18
     f78:	3c 93       	st	X, r19
     f7a:	17 97       	sbiw	r26, 0x07	; 7
	pid_database[index].Kd = Kd_a;
     f7c:	18 96       	adiw	r26, 0x08	; 8
     f7e:	cd 92       	st	X+, r12
     f80:	dd 92       	st	X+, r13
     f82:	ed 92       	st	X+, r14
     f84:	fc 92       	st	X, r15
     f86:	1b 97       	sbiw	r26, 0x0b	; 11
	
	pid_database[index].deltaTime = 1;
     f88:	40 e0       	ldi	r20, 0x00	; 0
     f8a:	50 e0       	ldi	r21, 0x00	; 0
     f8c:	60 e8       	ldi	r22, 0x80	; 128
     f8e:	7f e3       	ldi	r23, 0x3F	; 63
     f90:	54 96       	adiw	r26, 0x14	; 20
     f92:	4d 93       	st	X+, r20
     f94:	5d 93       	st	X+, r21
     f96:	6d 93       	st	X+, r22
     f98:	7c 93       	st	X, r23
     f9a:	57 97       	sbiw	r26, 0x17	; 23
	pid_database[index].integral = 0;
     f9c:	50 96       	adiw	r26, 0x10	; 16
     f9e:	1d 92       	st	X+, r1
     fa0:	1d 92       	st	X+, r1
     fa2:	1d 92       	st	X+, r1
     fa4:	1c 92       	st	X, r1
     fa6:	53 97       	sbiw	r26, 0x13	; 19
	pid_database[index].lastError = 0;
     fa8:	fd 01       	movw	r30, r26
     faa:	14 86       	std	Z+12, r1	; 0x0c
     fac:	15 86       	std	Z+13, r1	; 0x0d
     fae:	16 86       	std	Z+14, r1	; 0x0e
     fb0:	17 86       	std	Z+15, r1	; 0x0f
}
     fb2:	1f 91       	pop	r17
     fb4:	0f 91       	pop	r16
     fb6:	ff 90       	pop	r15
     fb8:	ef 90       	pop	r14
     fba:	df 90       	pop	r13
     fbc:	cf 90       	pop	r12
     fbe:	08 95       	ret

00000fc0 <pid_calculate>:

double pid_calculate(uint8_t index, double processVarible, double setPoint) {
     fc0:	2f 92       	push	r2
     fc2:	3f 92       	push	r3
     fc4:	4f 92       	push	r4
     fc6:	5f 92       	push	r5
     fc8:	6f 92       	push	r6
     fca:	7f 92       	push	r7
     fcc:	8f 92       	push	r8
     fce:	9f 92       	push	r9
     fd0:	af 92       	push	r10
     fd2:	bf 92       	push	r11
     fd4:	cf 92       	push	r12
     fd6:	df 92       	push	r13
     fd8:	ef 92       	push	r14
     fda:	ff 92       	push	r15
     fdc:	0f 93       	push	r16
     fde:	1f 93       	push	r17
     fe0:	cf 93       	push	r28
     fe2:	df 93       	push	r29
     fe4:	00 d0       	rcall	.+0      	; 0xfe6 <pid_calculate+0x26>
     fe6:	00 d0       	rcall	.+0      	; 0xfe8 <pid_calculate+0x28>
     fe8:	00 d0       	rcall	.+0      	; 0xfea <pid_calculate+0x2a>
     fea:	cd b7       	in	r28, 0x3d	; 61
     fec:	de b7       	in	r29, 0x3e	; 62
     fee:	89 83       	std	Y+1, r24	; 0x01
     ff0:	cb 01       	movw	r24, r22
     ff2:	ba 01       	movw	r22, r20
	double error = processVarible - setPoint;
     ff4:	a9 01       	movw	r20, r18
     ff6:	98 01       	movw	r18, r16
     ff8:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__subsf3>
     ffc:	6b 01       	movw	r12, r22
     ffe:	7c 01       	movw	r14, r24
	double derivative = (error-pid_database[index].lastError)/pid_database[index].deltaTime;
    1000:	89 81       	ldd	r24, Y+1	; 0x01
    1002:	08 2f       	mov	r16, r24
    1004:	10 e0       	ldi	r17, 0x00	; 0
    1006:	18 01       	movw	r2, r16
    1008:	22 0c       	add	r2, r2
    100a:	33 1c       	adc	r3, r3
    100c:	f1 01       	movw	r30, r2
    100e:	e0 0f       	add	r30, r16
    1010:	f1 1f       	adc	r31, r17
    1012:	ee 0f       	add	r30, r30
    1014:	ff 1f       	adc	r31, r31
    1016:	ee 0f       	add	r30, r30
    1018:	ff 1f       	adc	r31, r31
    101a:	ee 0f       	add	r30, r30
    101c:	ff 1f       	adc	r31, r31
    101e:	e5 5a       	subi	r30, 0xA5	; 165
    1020:	fe 4f       	sbci	r31, 0xFE	; 254
    1022:	fe 83       	std	Y+6, r31	; 0x06
    1024:	ed 83       	std	Y+5, r30	; 0x05
    1026:	84 88       	ldd	r8, Z+20	; 0x14
    1028:	95 88       	ldd	r9, Z+21	; 0x15
    102a:	a6 88       	ldd	r10, Z+22	; 0x16
    102c:	b7 88       	ldd	r11, Z+23	; 0x17
    102e:	24 85       	ldd	r18, Z+12	; 0x0c
    1030:	35 85       	ldd	r19, Z+13	; 0x0d
    1032:	46 85       	ldd	r20, Z+14	; 0x0e
    1034:	57 85       	ldd	r21, Z+15	; 0x0f
    1036:	c7 01       	movw	r24, r14
    1038:	b6 01       	movw	r22, r12
    103a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__subsf3>
    103e:	a5 01       	movw	r20, r10
    1040:	94 01       	movw	r18, r8
    1042:	0e 94 b7 0b 	call	0x176e	; 0x176e <__divsf3>
    1046:	69 83       	std	Y+1, r22	; 0x01
    1048:	7a 83       	std	Y+2, r23	; 0x02
    104a:	8b 83       	std	Y+3, r24	; 0x03
    104c:	9c 83       	std	Y+4, r25	; 0x04
	pid_database[index].integral +=(error*pid_database[index].deltaTime);
    104e:	a5 01       	movw	r20, r10
    1050:	94 01       	movw	r18, r8
    1052:	c7 01       	movw	r24, r14
    1054:	b6 01       	movw	r22, r12
    1056:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
    105a:	ed 81       	ldd	r30, Y+5	; 0x05
    105c:	fe 81       	ldd	r31, Y+6	; 0x06
    105e:	20 89       	ldd	r18, Z+16	; 0x10
    1060:	31 89       	ldd	r19, Z+17	; 0x11
    1062:	42 89       	ldd	r20, Z+18	; 0x12
    1064:	53 89       	ldd	r21, Z+19	; 0x13
    1066:	0e 94 bd 0a 	call	0x157a	; 0x157a <__addsf3>
    106a:	4b 01       	movw	r8, r22
    106c:	5c 01       	movw	r10, r24
    106e:	ed 81       	ldd	r30, Y+5	; 0x05
    1070:	fe 81       	ldd	r31, Y+6	; 0x06
    1072:	60 8b       	std	Z+16, r22	; 0x10
    1074:	71 8b       	std	Z+17, r23	; 0x11
    1076:	82 8b       	std	Z+18, r24	; 0x12
    1078:	93 8b       	std	Z+19, r25	; 0x13

	double controlVariable = pid_database[index].Kp*error + pid_database[index].Ki*pid_database[index].integral + pid_database[index].Kd*derivative;
    107a:	20 81       	ld	r18, Z
    107c:	31 81       	ldd	r19, Z+1	; 0x01
    107e:	42 81       	ldd	r20, Z+2	; 0x02
    1080:	53 81       	ldd	r21, Z+3	; 0x03
    1082:	c7 01       	movw	r24, r14
    1084:	b6 01       	movw	r22, r12
    1086:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
    108a:	2b 01       	movw	r4, r22
    108c:	3c 01       	movw	r6, r24
    108e:	ed 81       	ldd	r30, Y+5	; 0x05
    1090:	fe 81       	ldd	r31, Y+6	; 0x06
    1092:	24 81       	ldd	r18, Z+4	; 0x04
    1094:	35 81       	ldd	r19, Z+5	; 0x05
    1096:	46 81       	ldd	r20, Z+6	; 0x06
    1098:	57 81       	ldd	r21, Z+7	; 0x07
    109a:	c5 01       	movw	r24, r10
    109c:	b4 01       	movw	r22, r8
    109e:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
    10a2:	9b 01       	movw	r18, r22
    10a4:	ac 01       	movw	r20, r24
    10a6:	c3 01       	movw	r24, r6
    10a8:	b2 01       	movw	r22, r4
    10aa:	0e 94 bd 0a 	call	0x157a	; 0x157a <__addsf3>
    10ae:	4b 01       	movw	r8, r22
    10b0:	5c 01       	movw	r10, r24
    10b2:	ed 81       	ldd	r30, Y+5	; 0x05
    10b4:	fe 81       	ldd	r31, Y+6	; 0x06
    10b6:	20 85       	ldd	r18, Z+8	; 0x08
    10b8:	31 85       	ldd	r19, Z+9	; 0x09
    10ba:	42 85       	ldd	r20, Z+10	; 0x0a
    10bc:	53 85       	ldd	r21, Z+11	; 0x0b
    10be:	69 81       	ldd	r22, Y+1	; 0x01
    10c0:	7a 81       	ldd	r23, Y+2	; 0x02
    10c2:	8b 81       	ldd	r24, Y+3	; 0x03
    10c4:	9c 81       	ldd	r25, Y+4	; 0x04
    10c6:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
    10ca:	9b 01       	movw	r18, r22
    10cc:	ac 01       	movw	r20, r24
    10ce:	c5 01       	movw	r24, r10
    10d0:	b4 01       	movw	r22, r8
    10d2:	0e 94 bd 0a 	call	0x157a	; 0x157a <__addsf3>

	pid_database[index].lastError = error;
    10d6:	f1 01       	movw	r30, r2
    10d8:	e0 0f       	add	r30, r16
    10da:	f1 1f       	adc	r31, r17
    10dc:	ee 0f       	add	r30, r30
    10de:	ff 1f       	adc	r31, r31
    10e0:	ee 0f       	add	r30, r30
    10e2:	ff 1f       	adc	r31, r31
    10e4:	ee 0f       	add	r30, r30
    10e6:	ff 1f       	adc	r31, r31
    10e8:	e5 5a       	subi	r30, 0xA5	; 165
    10ea:	fe 4f       	sbci	r31, 0xFE	; 254
    10ec:	c4 86       	std	Z+12, r12	; 0x0c
    10ee:	d5 86       	std	Z+13, r13	; 0x0d
    10f0:	e6 86       	std	Z+14, r14	; 0x0e
    10f2:	f7 86       	std	Z+15, r15	; 0x0f

	return controlVariable;
}
    10f4:	26 96       	adiw	r28, 0x06	; 6
    10f6:	0f b6       	in	r0, 0x3f	; 63
    10f8:	f8 94       	cli
    10fa:	de bf       	out	0x3e, r29	; 62
    10fc:	0f be       	out	0x3f, r0	; 63
    10fe:	cd bf       	out	0x3d, r28	; 61
    1100:	df 91       	pop	r29
    1102:	cf 91       	pop	r28
    1104:	1f 91       	pop	r17
    1106:	0f 91       	pop	r16
    1108:	ff 90       	pop	r15
    110a:	ef 90       	pop	r14
    110c:	df 90       	pop	r13
    110e:	cf 90       	pop	r12
    1110:	bf 90       	pop	r11
    1112:	af 90       	pop	r10
    1114:	9f 90       	pop	r9
    1116:	8f 90       	pop	r8
    1118:	7f 90       	pop	r7
    111a:	6f 90       	pop	r6
    111c:	5f 90       	pop	r5
    111e:	4f 90       	pop	r4
    1120:	3f 90       	pop	r3
    1122:	2f 90       	pop	r2
    1124:	08 95       	ret

00001126 <pid_reset>:

void pid_reset(uint8_t index) {
	pid_database[index].integral = 0;
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	fc 01       	movw	r30, r24
    112a:	ee 0f       	add	r30, r30
    112c:	ff 1f       	adc	r31, r31
    112e:	df 01       	movw	r26, r30
    1130:	a8 0f       	add	r26, r24
    1132:	b9 1f       	adc	r27, r25
    1134:	aa 0f       	add	r26, r26
    1136:	bb 1f       	adc	r27, r27
    1138:	aa 0f       	add	r26, r26
    113a:	bb 1f       	adc	r27, r27
    113c:	aa 0f       	add	r26, r26
    113e:	bb 1f       	adc	r27, r27
    1140:	a5 5a       	subi	r26, 0xA5	; 165
    1142:	be 4f       	sbci	r27, 0xFE	; 254
    1144:	50 96       	adiw	r26, 0x10	; 16
    1146:	1d 92       	st	X+, r1
    1148:	1d 92       	st	X+, r1
    114a:	1d 92       	st	X+, r1
    114c:	1c 92       	st	X, r1
    114e:	53 97       	sbiw	r26, 0x13	; 19
	pid_database[index].lastError = 0;
    1150:	fd 01       	movw	r30, r26
    1152:	14 86       	std	Z+12, r1	; 0x0c
    1154:	15 86       	std	Z+13, r1	; 0x0d
    1156:	16 86       	std	Z+14, r1	; 0x0e
    1158:	17 86       	std	Z+15, r1	; 0x0f
    115a:	08 95       	ret

0000115c <decoder_rc5_reset>:
	return (uint8_t)((decoder_rc5_message & 0x07C0)>>6);
}

uint8_t decoder_rc5_get_command() {
	return (uint8_t)(decoder_rc5_message & 0x003F);
}
    115c:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <decoder_rc5_isNew>
    1160:	8e e0       	ldi	r24, 0x0E	; 14
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <decoder_rc5_counter+0x1>
    1168:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <decoder_rc5_counter>
    116c:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <decoder_rc5_message+0x1>
    1170:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <decoder_rc5_message>
    1174:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <decoder_rc5_delayFull+0x1>
    1178:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <decoder_rc5_delayFull>
    117c:	85 e0       	ldi	r24, 0x05	; 5
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <decoder_rc5_currentState+0x1>
    1184:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <decoder_rc5_currentState>
    1188:	08 95       	ret

0000118a <decoder_rc5_initialize>:
    118a:	52 98       	cbi	0x0a, 2	; 10
    118c:	5a 9a       	sbi	0x0b, 2	; 11
    118e:	e8 9a       	sbi	0x1d, 0	; 29
    1190:	e9 e6       	ldi	r30, 0x69	; 105
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	80 81       	ld	r24, Z
    1196:	81 60       	ori	r24, 0x01	; 1
    1198:	80 83       	st	Z, r24
    119a:	80 81       	ld	r24, Z
    119c:	8d 7f       	andi	r24, 0xFD	; 253
    119e:	80 83       	st	Z, r24
    11a0:	e1 eb       	ldi	r30, 0xB1	; 177
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	80 81       	ld	r24, Z
    11a6:	81 60       	ori	r24, 0x01	; 1
    11a8:	80 83       	st	Z, r24
    11aa:	e0 e7       	ldi	r30, 0x70	; 112
    11ac:	f0 e0       	ldi	r31, 0x00	; 0
    11ae:	80 81       	ld	r24, Z
    11b0:	81 60       	ori	r24, 0x01	; 1
    11b2:	80 83       	st	Z, r24
    11b4:	78 94       	sei
    11b6:	0e 94 ae 08 	call	0x115c	; 0x115c <decoder_rc5_reset>
    11ba:	08 95       	ret

000011bc <decoder_rc5_TIMER_ISR>:
    11bc:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <decoder_rc5_delayFull>
    11c0:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <decoder_rc5_delayFull+0x1>
    11c4:	01 96       	adiw	r24, 0x01	; 1
    11c6:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <decoder_rc5_delayFull+0x1>
    11ca:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <decoder_rc5_delayFull>
    11ce:	08 95       	ret

000011d0 <decoder_rc5_INT_ISR>:
    11d0:	1f 93       	push	r17
    11d2:	cf 93       	push	r28
    11d4:	df 93       	push	r29
    11d6:	00 d0       	rcall	.+0      	; 0x11d8 <decoder_rc5_INT_ISR+0x8>
    11d8:	00 d0       	rcall	.+0      	; 0x11da <decoder_rc5_INT_ISR+0xa>
    11da:	cd b7       	in	r28, 0x3d	; 61
    11dc:	de b7       	in	r29, 0x3e	; 62
    11de:	20 91 b2 00 	lds	r18, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    11e2:	80 e0       	ldi	r24, 0x00	; 0
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <decoder_rc5_delayFull>
    11ea:	82 0f       	add	r24, r18
    11ec:	91 1d       	adc	r25, r1
    11ee:	96 95       	lsr	r25
    11f0:	87 95       	ror	r24
    11f2:	96 95       	lsr	r25
    11f4:	87 95       	ror	r24
    11f6:	4a 99       	sbic	0x09, 2	; 9
    11f8:	02 c0       	rjmp	.+4      	; 0x11fe <decoder_rc5_INT_ISR+0x2e>
    11fa:	10 e0       	ldi	r17, 0x00	; 0
    11fc:	01 c0       	rjmp	.+2      	; 0x1200 <decoder_rc5_INT_ISR+0x30>
    11fe:	12 e0       	ldi	r17, 0x02	; 2
    1200:	9c 01       	movw	r18, r24
    1202:	2d 56       	subi	r18, 0x6D	; 109
    1204:	3a 40       	sbci	r19, 0x0A	; 10
    1206:	2f 3e       	cpi	r18, 0xEF	; 239
    1208:	36 40       	sbci	r19, 0x06	; 6
    120a:	10 f4       	brcc	.+4      	; 0x1210 <decoder_rc5_INT_ISR+0x40>
    120c:	1c 5f       	subi	r17, 0xFC	; 252
    120e:	07 c0       	rjmp	.+14     	; 0x121e <decoder_rc5_INT_ISR+0x4e>
    1210:	88 57       	subi	r24, 0x78	; 120
    1212:	93 40       	sbci	r25, 0x03	; 3
    1214:	83 3f       	cpi	r24, 0xF3	; 243
    1216:	96 40       	sbci	r25, 0x06	; 6
    1218:	10 f0       	brcs	.+4      	; 0x121e <decoder_rc5_INT_ISR+0x4e>
    121a:	0e 94 ae 08 	call	0x115c	; 0x115c <decoder_rc5_reset>
    121e:	20 91 54 01 	lds	r18, 0x0154	; 0x800154 <decoder_rc5_currentState>
    1222:	30 91 55 01 	lds	r19, 0x0155	; 0x800155 <decoder_rc5_currentState+0x1>
    1226:	25 30       	cpi	r18, 0x05	; 5
    1228:	31 05       	cpc	r19, r1
    122a:	19 f5       	brne	.+70     	; 0x1272 <decoder_rc5_INT_ISR+0xa2>
    122c:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <decoder_rc5_counter>
    1230:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <decoder_rc5_counter+0x1>
    1234:	01 97       	sbiw	r24, 0x01	; 1
    1236:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <decoder_rc5_counter+0x1>
    123a:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <decoder_rc5_counter>
    123e:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <decoder_rc5_message>
    1242:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <decoder_rc5_message+0x1>
    1246:	41 e0       	ldi	r20, 0x01	; 1
    1248:	50 e0       	ldi	r21, 0x00	; 0
    124a:	ba 01       	movw	r22, r20
    124c:	02 c0       	rjmp	.+4      	; 0x1252 <decoder_rc5_INT_ISR+0x82>
    124e:	66 0f       	add	r22, r22
    1250:	77 1f       	adc	r23, r23
    1252:	8a 95       	dec	r24
    1254:	e2 f7       	brpl	.-8      	; 0x124e <decoder_rc5_INT_ISR+0x7e>
    1256:	cb 01       	movw	r24, r22
    1258:	82 2b       	or	r24, r18
    125a:	93 2b       	or	r25, r19
    125c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <decoder_rc5_message+0x1>
    1260:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <decoder_rc5_message>
    1264:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <decoder_rc5_currentState+0x1>
    1268:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <decoder_rc5_currentState>
    126c:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    1270:	68 c0       	rjmp	.+208    	; 0x1342 <decoder_rc5_INT_ISR+0x172>
    1272:	81 e0       	ldi	r24, 0x01	; 1
    1274:	89 83       	std	Y+1, r24	; 0x01
    1276:	81 e9       	ldi	r24, 0x91	; 145
    1278:	8a 83       	std	Y+2, r24	; 0x02
    127a:	8b e9       	ldi	r24, 0x9B	; 155
    127c:	8b 83       	std	Y+3, r24	; 0x03
    127e:	8b ef       	ldi	r24, 0xFB	; 251
    1280:	8c 83       	std	Y+4, r24	; 0x04
    1282:	fe 01       	movw	r30, r28
    1284:	e2 0f       	add	r30, r18
    1286:	f3 1f       	adc	r31, r19
    1288:	81 81       	ldd	r24, Z+1	; 0x01
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	02 c0       	rjmp	.+4      	; 0x1292 <decoder_rc5_INT_ISR+0xc2>
    128e:	95 95       	asr	r25
    1290:	87 95       	ror	r24
    1292:	1a 95       	dec	r17
    1294:	e2 f7       	brpl	.-8      	; 0x128e <decoder_rc5_INT_ISR+0xbe>
    1296:	ac 01       	movw	r20, r24
    1298:	43 70       	andi	r20, 0x03	; 3
    129a:	55 27       	eor	r21, r21
    129c:	24 17       	cp	r18, r20
    129e:	35 07       	cpc	r19, r21
    12a0:	19 f0       	breq	.+6      	; 0x12a8 <decoder_rc5_INT_ISR+0xd8>
    12a2:	24 30       	cpi	r18, 0x04	; 4
    12a4:	31 05       	cpc	r19, r1
    12a6:	1c f0       	brlt	.+6      	; 0x12ae <decoder_rc5_INT_ISR+0xde>
    12a8:	0e 94 ae 08 	call	0x115c	; 0x115c <decoder_rc5_reset>
    12ac:	4a c0       	rjmp	.+148    	; 0x1342 <decoder_rc5_INT_ISR+0x172>
    12ae:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <decoder_rc5_currentState+0x1>
    12b2:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <decoder_rc5_currentState>
    12b6:	42 30       	cpi	r20, 0x02	; 2
    12b8:	51 05       	cpc	r21, r1
    12ba:	61 f4       	brne	.+24     	; 0x12d4 <decoder_rc5_INT_ISR+0x104>
    12bc:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <decoder_rc5_counter>
    12c0:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <decoder_rc5_counter+0x1>
    12c4:	01 97       	sbiw	r24, 0x01	; 1
    12c6:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <decoder_rc5_counter+0x1>
    12ca:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <decoder_rc5_counter>
    12ce:	89 2b       	or	r24, r25
    12d0:	91 f5       	brne	.+100    	; 0x1336 <decoder_rc5_INT_ISR+0x166>
    12d2:	28 c0       	rjmp	.+80     	; 0x1324 <decoder_rc5_INT_ISR+0x154>
    12d4:	41 30       	cpi	r20, 0x01	; 1
    12d6:	51 05       	cpc	r21, r1
    12d8:	e9 f4       	brne	.+58     	; 0x1314 <decoder_rc5_INT_ISR+0x144>
    12da:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <decoder_rc5_counter>
    12de:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <decoder_rc5_counter+0x1>
    12e2:	01 97       	sbiw	r24, 0x01	; 1
    12e4:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <decoder_rc5_counter+0x1>
    12e8:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <decoder_rc5_counter>
    12ec:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <decoder_rc5_message>
    12f0:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <decoder_rc5_message+0x1>
    12f4:	41 e0       	ldi	r20, 0x01	; 1
    12f6:	50 e0       	ldi	r21, 0x00	; 0
    12f8:	ba 01       	movw	r22, r20
    12fa:	02 c0       	rjmp	.+4      	; 0x1300 <decoder_rc5_INT_ISR+0x130>
    12fc:	66 0f       	add	r22, r22
    12fe:	77 1f       	adc	r23, r23
    1300:	8a 95       	dec	r24
    1302:	e2 f7       	brpl	.-8      	; 0x12fc <decoder_rc5_INT_ISR+0x12c>
    1304:	cb 01       	movw	r24, r22
    1306:	82 2b       	or	r24, r18
    1308:	93 2b       	or	r25, r19
    130a:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <decoder_rc5_message+0x1>
    130e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <decoder_rc5_message>
    1312:	11 c0       	rjmp	.+34     	; 0x1336 <decoder_rc5_INT_ISR+0x166>
    1314:	20 91 59 01 	lds	r18, 0x0159	; 0x800159 <decoder_rc5_counter>
    1318:	30 91 5a 01 	lds	r19, 0x015A	; 0x80015a <decoder_rc5_counter+0x1>
    131c:	23 2b       	or	r18, r19
    131e:	59 f4       	brne	.+22     	; 0x1336 <decoder_rc5_INT_ISR+0x166>
    1320:	80 fd       	sbrc	r24, 0
    1322:	09 c0       	rjmp	.+18     	; 0x1336 <decoder_rc5_INT_ISR+0x166>
    1324:	86 e0       	ldi	r24, 0x06	; 6
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <decoder_rc5_currentState+0x1>
    132c:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <decoder_rc5_currentState>
    1330:	81 e0       	ldi	r24, 0x01	; 1
    1332:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <decoder_rc5_isNew>
    1336:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    133a:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <decoder_rc5_delayFull+0x1>
    133e:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <decoder_rc5_delayFull>
    1342:	0f 90       	pop	r0
    1344:	0f 90       	pop	r0
    1346:	0f 90       	pop	r0
    1348:	0f 90       	pop	r0
    134a:	df 91       	pop	r29
    134c:	cf 91       	pop	r28
    134e:	1f 91       	pop	r17
    1350:	08 95       	ret

00001352 <__vector_1>:

ISR(INT0_vect) {
    1352:	1f 92       	push	r1
    1354:	0f 92       	push	r0
    1356:	0f b6       	in	r0, 0x3f	; 63
    1358:	0f 92       	push	r0
    135a:	11 24       	eor	r1, r1
    135c:	2f 93       	push	r18
    135e:	3f 93       	push	r19
    1360:	4f 93       	push	r20
    1362:	5f 93       	push	r21
    1364:	6f 93       	push	r22
    1366:	7f 93       	push	r23
    1368:	8f 93       	push	r24
    136a:	9f 93       	push	r25
    136c:	af 93       	push	r26
    136e:	bf 93       	push	r27
    1370:	ef 93       	push	r30
    1372:	ff 93       	push	r31
	decoder_rc5_INT_ISR();
    1374:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <decoder_rc5_INT_ISR>
}
    1378:	ff 91       	pop	r31
    137a:	ef 91       	pop	r30
    137c:	bf 91       	pop	r27
    137e:	af 91       	pop	r26
    1380:	9f 91       	pop	r25
    1382:	8f 91       	pop	r24
    1384:	7f 91       	pop	r23
    1386:	6f 91       	pop	r22
    1388:	5f 91       	pop	r21
    138a:	4f 91       	pop	r20
    138c:	3f 91       	pop	r19
    138e:	2f 91       	pop	r18
    1390:	0f 90       	pop	r0
    1392:	0f be       	out	0x3f, r0	; 63
    1394:	0f 90       	pop	r0
    1396:	1f 90       	pop	r1
    1398:	18 95       	reti

0000139a <__vector_9>:

ISR(TIMER2_OVF_vect) {
    139a:	1f 92       	push	r1
    139c:	0f 92       	push	r0
    139e:	0f b6       	in	r0, 0x3f	; 63
    13a0:	0f 92       	push	r0
    13a2:	11 24       	eor	r1, r1
    13a4:	2f 93       	push	r18
    13a6:	3f 93       	push	r19
    13a8:	4f 93       	push	r20
    13aa:	5f 93       	push	r21
    13ac:	6f 93       	push	r22
    13ae:	7f 93       	push	r23
    13b0:	8f 93       	push	r24
    13b2:	9f 93       	push	r25
    13b4:	af 93       	push	r26
    13b6:	bf 93       	push	r27
    13b8:	ef 93       	push	r30
    13ba:	ff 93       	push	r31
	decoder_rc5_TIMER_ISR();
    13bc:	0e 94 de 08 	call	0x11bc	; 0x11bc <decoder_rc5_TIMER_ISR>
    13c0:	ff 91       	pop	r31
    13c2:	ef 91       	pop	r30
    13c4:	bf 91       	pop	r27
    13c6:	af 91       	pop	r26
    13c8:	9f 91       	pop	r25
    13ca:	8f 91       	pop	r24
    13cc:	7f 91       	pop	r23
    13ce:	6f 91       	pop	r22
    13d0:	5f 91       	pop	r21
    13d2:	4f 91       	pop	r20
    13d4:	3f 91       	pop	r19
    13d6:	2f 91       	pop	r18
    13d8:	0f 90       	pop	r0
    13da:	0f be       	out	0x3f, r0	; 63
    13dc:	0f 90       	pop	r0
    13de:	1f 90       	pop	r1
    13e0:	18 95       	reti

000013e2 <uart_begin>:
#include <stdbool.h>
#include "uart.h"

void uart_begin(unsigned long baudRate) {
	//unsigned long baudRateValue = 103;
	unsigned long baudRateValue = (8000000/(16*baudRate))-1;
    13e2:	dc 01       	movw	r26, r24
    13e4:	cb 01       	movw	r24, r22
    13e6:	88 0f       	add	r24, r24
    13e8:	99 1f       	adc	r25, r25
    13ea:	aa 1f       	adc	r26, r26
    13ec:	bb 1f       	adc	r27, r27
    13ee:	88 0f       	add	r24, r24
    13f0:	99 1f       	adc	r25, r25
    13f2:	aa 1f       	adc	r26, r26
    13f4:	bb 1f       	adc	r27, r27
    13f6:	9c 01       	movw	r18, r24
    13f8:	ad 01       	movw	r20, r26
    13fa:	22 0f       	add	r18, r18
    13fc:	33 1f       	adc	r19, r19
    13fe:	44 1f       	adc	r20, r20
    1400:	55 1f       	adc	r21, r21
    1402:	22 0f       	add	r18, r18
    1404:	33 1f       	adc	r19, r19
    1406:	44 1f       	adc	r20, r20
    1408:	55 1f       	adc	r21, r21
    140a:	60 e0       	ldi	r22, 0x00	; 0
    140c:	72 e1       	ldi	r23, 0x12	; 18
    140e:	8a e7       	ldi	r24, 0x7A	; 122
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <__udivmodsi4>
    1416:	da 01       	movw	r26, r20
    1418:	c9 01       	movw	r24, r18
    141a:	01 97       	sbiw	r24, 0x01	; 1
    141c:	a1 09       	sbc	r26, r1
    141e:	b1 09       	sbc	r27, r1
	UBRR0L = baudRateValue;
    1420:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UBRR0H = (baudRateValue>>8);
    1424:	89 2f       	mov	r24, r25
    1426:	9a 2f       	mov	r25, r26
    1428:	ab 2f       	mov	r26, r27
    142a:	bb 27       	eor	r27, r27
    142c:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    1430:	88 e1       	ldi	r24, 0x18	; 24
    1432:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C |= 1<<UPM00;
    1436:	e2 ec       	ldi	r30, 0xC2	; 194
    1438:	f0 e0       	ldi	r31, 0x00	; 0
    143a:	80 81       	ld	r24, Z
    143c:	80 61       	ori	r24, 0x10	; 16
    143e:	80 83       	st	Z, r24
	UCSR0C |= (1<<UCSZ01) | (1<<UCSZ00);
    1440:	80 81       	ld	r24, Z
    1442:	86 60       	ori	r24, 0x06	; 6
    1444:	80 83       	st	Z, r24
	
	bufferLen = 0;
    1446:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <bufferLen+0x1>
    144a:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <bufferLen>
    144e:	e4 e1       	ldi	r30, 0x14	; 20
    1450:	f1 e0       	ldi	r31, 0x01	; 1
    1452:	24 e5       	ldi	r18, 0x54	; 84
    1454:	31 e0       	ldi	r19, 0x01	; 1
	for(int i=0; i<64; i++)
	buffer[i] = '#';
    1456:	83 e2       	ldi	r24, 0x23	; 35
    1458:	81 93       	st	Z+, r24
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
	UCSR0C |= 1<<UPM00;
	UCSR0C |= (1<<UCSZ01) | (1<<UCSZ00);
	
	bufferLen = 0;
	for(int i=0; i<64; i++)
    145a:	e2 17       	cp	r30, r18
    145c:	f3 07       	cpc	r31, r19
    145e:	e1 f7       	brne	.-8      	; 0x1458 <uart_begin+0x76>
	buffer[i] = '#';
	buffer[63] = '\0';
    1460:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <buffer+0x3f>
    1464:	e3 e7       	ldi	r30, 0x73	; 115
    1466:	f1 e0       	ldi	r31, 0x01	; 1
    1468:	23 eb       	ldi	r18, 0xB3	; 179
    146a:	31 e0       	ldi	r19, 0x01	; 1
	
	for(int i=0; i<64; i++)
	str[i] = '#';
    146c:	83 e2       	ldi	r24, 0x23	; 35
    146e:	81 93       	st	Z+, r24
	bufferLen = 0;
	for(int i=0; i<64; i++)
	buffer[i] = '#';
	buffer[63] = '\0';
	
	for(int i=0; i<64; i++)
    1470:	e2 17       	cp	r30, r18
    1472:	f3 07       	cpc	r31, r19
    1474:	e1 f7       	brne	.-8      	; 0x146e <uart_begin+0x8c>
	str[i] = '#';
	str[63] = '\0';
    1476:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <str+0x3f>
    147a:	08 95       	ret

0000147c <rgb_color_multiply>:
	for(uint8_t i=0; i<LED_STRIP_SIZE; i++)
		rgb_color_array[i] = color;
	led_strip_write();
}

rgb_color rgb_color_multiply(rgb_color color, double number) {
    147c:	cf 92       	push	r12
    147e:	df 92       	push	r13
    1480:	ef 92       	push	r14
    1482:	ff 92       	push	r15
    1484:	1f 93       	push	r17
    1486:	cf 93       	push	r28
    1488:	df 93       	push	r29
    148a:	c6 2f       	mov	r28, r22
    148c:	d8 2f       	mov	r29, r24
    148e:	69 01       	movw	r12, r18
    1490:	7a 01       	movw	r14, r20
	return (rgb_color){.r = color.r*number, .g = color.g*number, .b = color.b*number};
    1492:	67 2f       	mov	r22, r23
    1494:	70 e0       	ldi	r23, 0x00	; 0
    1496:	80 e0       	ldi	r24, 0x00	; 0
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
    149e:	a7 01       	movw	r20, r14
    14a0:	96 01       	movw	r18, r12
    14a2:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
    14a6:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
    14aa:	16 2f       	mov	r17, r22
    14ac:	6d 2f       	mov	r22, r29
    14ae:	70 e0       	ldi	r23, 0x00	; 0
    14b0:	80 e0       	ldi	r24, 0x00	; 0
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
    14b8:	a7 01       	movw	r20, r14
    14ba:	96 01       	movw	r18, r12
    14bc:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
    14c0:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
    14c4:	d6 2f       	mov	r29, r22
    14c6:	6c 2f       	mov	r22, r28
    14c8:	70 e0       	ldi	r23, 0x00	; 0
    14ca:	80 e0       	ldi	r24, 0x00	; 0
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__floatsisf>
    14d2:	a7 01       	movw	r20, r14
    14d4:	96 01       	movw	r18, r12
    14d6:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__mulsf3>
    14da:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
}
    14de:	71 2f       	mov	r23, r17
    14e0:	8d 2f       	mov	r24, r29
    14e2:	df 91       	pop	r29
    14e4:	cf 91       	pop	r28
    14e6:	1f 91       	pop	r17
    14e8:	ff 90       	pop	r15
    14ea:	ef 90       	pop	r14
    14ec:	df 90       	pop	r13
    14ee:	cf 90       	pop	r12
    14f0:	08 95       	ret

000014f2 <led_strip_write>:

void __attribute__((noinline)) led_strip_write() {
    14f2:	cf 93       	push	r28
    14f4:	df 93       	push	r29
	LED_STRIP_PORT &= ~(1<<LED_STRIP_PIN);
    14f6:	28 98       	cbi	0x05, 0	; 5
	LED_STRIP_DDR |= (1<<LED_STRIP_PIN);
    14f8:	20 9a       	sbi	0x04, 0	; 4
	
	uint16_t count = LED_STRIP_SIZE;

	cli();
    14fa:	f8 94       	cli
	while(count--) {
		asm volatile(
    14fc:	8e e0       	ldi	r24, 0x0E	; 14
    14fe:	91 e0       	ldi	r25, 0x01	; 1
    1500:	ec 01       	movw	r28, r24
    1502:	09 90       	ld	r0, Y+
    1504:	08 80       	ld	r0, Y
    1506:	07 d0       	rcall	.+14     	; 0x1516 <send_led_strip_byte121>
    1508:	0a 90       	ld	r0, -Y
    150a:	05 d0       	rcall	.+10     	; 0x1516 <send_led_strip_byte121>
    150c:	09 90       	ld	r0, Y+
    150e:	09 90       	ld	r0, Y+
    1510:	09 90       	ld	r0, Y+
    1512:	01 d0       	rcall	.+2      	; 0x1516 <send_led_strip_byte121>
    1514:	12 c0       	rjmp	.+36     	; 0x153a <led_strip_asm_end121>

00001516 <send_led_strip_byte121>:
    1516:	08 d0       	rcall	.+16     	; 0x1528 <send_led_strip_bit121>
    1518:	07 d0       	rcall	.+14     	; 0x1528 <send_led_strip_bit121>
    151a:	06 d0       	rcall	.+12     	; 0x1528 <send_led_strip_bit121>
    151c:	05 d0       	rcall	.+10     	; 0x1528 <send_led_strip_bit121>
    151e:	04 d0       	rcall	.+8      	; 0x1528 <send_led_strip_bit121>
    1520:	03 d0       	rcall	.+6      	; 0x1528 <send_led_strip_bit121>
    1522:	02 d0       	rcall	.+4      	; 0x1528 <send_led_strip_bit121>
    1524:	01 d0       	rcall	.+2      	; 0x1528 <send_led_strip_bit121>
    1526:	08 95       	ret

00001528 <send_led_strip_bit121>:
    1528:	00 1c       	adc	r0, r0
    152a:	28 9a       	sbi	0x05, 0	; 5
    152c:	08 f0       	brcs	.+2      	; 0x1530 <send_led_strip_bit121+0x8>
    152e:	28 98       	cbi	0x05, 0	; 5
    1530:	00 00       	nop
    1532:	00 00       	nop
    1534:	08 f4       	brcc	.+2      	; 0x1538 <send_led_strip_bit121+0x10>
    1536:	28 98       	cbi	0x05, 0	; 5
    1538:	08 95       	ret

0000153a <led_strip_asm_end121>:
    153a:	c0 93 0e 01 	sts	0x010E, r28	; 0x80010e <rgb_color_array>
    153e:	d0 93 0f 01 	sts	0x010F, r29	; 0x80010f <rgb_color_array+0x1>
    1542:	e0 93 10 01 	sts	0x0110, r30	; 0x800110 <rgb_color_array+0x2>
		: "0" (rgb_color_array),
		"I" (_SFR_IO_ADDR(LED_STRIP_PORT)),
		"I" (LED_STRIP_PIN)
		);
	}
	sei();
    1546:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1548:	d5 ed       	ldi	r29, 0xD5	; 213
    154a:	da 95       	dec	r29
    154c:	f1 f7       	brne	.-4      	; 0x154a <led_strip_asm_end121+0x10>
    154e:	00 00       	nop
	_delay_us(80);
    1550:	df 91       	pop	r29
    1552:	cf 91       	pop	r28
    1554:	08 95       	ret

00001556 <rgb_color_set_rgb>:
#include "ws2812b.h"

void rgb_color_set_rgb(uint8_t red, uint8_t green, uint8_t blue) {
	for(uint8_t i=0; i<LED_STRIP_SIZE; i++)
	rgb_color_array[i] = (rgb_color){.r = red,.g =  green,.b = blue};
    1556:	ee e0       	ldi	r30, 0x0E	; 14
    1558:	f1 e0       	ldi	r31, 0x01	; 1
    155a:	60 83       	st	Z, r22
    155c:	81 83       	std	Z+1, r24	; 0x01
    155e:	42 83       	std	Z+2, r20	; 0x02
	led_strip_write();
    1560:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <led_strip_write>
    1564:	08 95       	ret

00001566 <rgb_color_set>:
}

void rgb_color_set(rgb_color color) {
	for(uint8_t i=0; i<LED_STRIP_SIZE; i++)
		rgb_color_array[i] = color;
    1566:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <rgb_color_array>
    156a:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <rgb_color_array+0x1>
    156e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <rgb_color_array+0x2>
	led_strip_write();
    1572:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <led_strip_write>
    1576:	08 95       	ret

00001578 <__subsf3>:
    1578:	50 58       	subi	r21, 0x80	; 128

0000157a <__addsf3>:
    157a:	bb 27       	eor	r27, r27
    157c:	aa 27       	eor	r26, r26
    157e:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <__addsf3x>
    1582:	0c 94 3e 0d 	jmp	0x1a7c	; 0x1a7c <__fp_round>
    1586:	0e 94 30 0d 	call	0x1a60	; 0x1a60 <__fp_pscA>
    158a:	38 f0       	brcs	.+14     	; 0x159a <__addsf3+0x20>
    158c:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__fp_pscB>
    1590:	20 f0       	brcs	.+8      	; 0x159a <__addsf3+0x20>
    1592:	39 f4       	brne	.+14     	; 0x15a2 <__addsf3+0x28>
    1594:	9f 3f       	cpi	r25, 0xFF	; 255
    1596:	19 f4       	brne	.+6      	; 0x159e <__addsf3+0x24>
    1598:	26 f4       	brtc	.+8      	; 0x15a2 <__addsf3+0x28>
    159a:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__fp_nan>
    159e:	0e f4       	brtc	.+2      	; 0x15a2 <__addsf3+0x28>
    15a0:	e0 95       	com	r30
    15a2:	e7 fb       	bst	r30, 7
    15a4:	0c 94 d7 0c 	jmp	0x19ae	; 0x19ae <__fp_inf>

000015a8 <__addsf3x>:
    15a8:	e9 2f       	mov	r30, r25
    15aa:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <__fp_split3>
    15ae:	58 f3       	brcs	.-42     	; 0x1586 <__addsf3+0xc>
    15b0:	ba 17       	cp	r27, r26
    15b2:	62 07       	cpc	r22, r18
    15b4:	73 07       	cpc	r23, r19
    15b6:	84 07       	cpc	r24, r20
    15b8:	95 07       	cpc	r25, r21
    15ba:	20 f0       	brcs	.+8      	; 0x15c4 <__addsf3x+0x1c>
    15bc:	79 f4       	brne	.+30     	; 0x15dc <__addsf3x+0x34>
    15be:	a6 f5       	brtc	.+104    	; 0x1628 <__addsf3x+0x80>
    15c0:	0c 94 89 0d 	jmp	0x1b12	; 0x1b12 <__fp_zero>
    15c4:	0e f4       	brtc	.+2      	; 0x15c8 <__addsf3x+0x20>
    15c6:	e0 95       	com	r30
    15c8:	0b 2e       	mov	r0, r27
    15ca:	ba 2f       	mov	r27, r26
    15cc:	a0 2d       	mov	r26, r0
    15ce:	0b 01       	movw	r0, r22
    15d0:	b9 01       	movw	r22, r18
    15d2:	90 01       	movw	r18, r0
    15d4:	0c 01       	movw	r0, r24
    15d6:	ca 01       	movw	r24, r20
    15d8:	a0 01       	movw	r20, r0
    15da:	11 24       	eor	r1, r1
    15dc:	ff 27       	eor	r31, r31
    15de:	59 1b       	sub	r21, r25
    15e0:	99 f0       	breq	.+38     	; 0x1608 <__addsf3x+0x60>
    15e2:	59 3f       	cpi	r21, 0xF9	; 249
    15e4:	50 f4       	brcc	.+20     	; 0x15fa <__addsf3x+0x52>
    15e6:	50 3e       	cpi	r21, 0xE0	; 224
    15e8:	68 f1       	brcs	.+90     	; 0x1644 <__addsf3x+0x9c>
    15ea:	1a 16       	cp	r1, r26
    15ec:	f0 40       	sbci	r31, 0x00	; 0
    15ee:	a2 2f       	mov	r26, r18
    15f0:	23 2f       	mov	r18, r19
    15f2:	34 2f       	mov	r19, r20
    15f4:	44 27       	eor	r20, r20
    15f6:	58 5f       	subi	r21, 0xF8	; 248
    15f8:	f3 cf       	rjmp	.-26     	; 0x15e0 <__addsf3x+0x38>
    15fa:	46 95       	lsr	r20
    15fc:	37 95       	ror	r19
    15fe:	27 95       	ror	r18
    1600:	a7 95       	ror	r26
    1602:	f0 40       	sbci	r31, 0x00	; 0
    1604:	53 95       	inc	r21
    1606:	c9 f7       	brne	.-14     	; 0x15fa <__addsf3x+0x52>
    1608:	7e f4       	brtc	.+30     	; 0x1628 <__addsf3x+0x80>
    160a:	1f 16       	cp	r1, r31
    160c:	ba 0b       	sbc	r27, r26
    160e:	62 0b       	sbc	r22, r18
    1610:	73 0b       	sbc	r23, r19
    1612:	84 0b       	sbc	r24, r20
    1614:	ba f0       	brmi	.+46     	; 0x1644 <__addsf3x+0x9c>
    1616:	91 50       	subi	r25, 0x01	; 1
    1618:	a1 f0       	breq	.+40     	; 0x1642 <__addsf3x+0x9a>
    161a:	ff 0f       	add	r31, r31
    161c:	bb 1f       	adc	r27, r27
    161e:	66 1f       	adc	r22, r22
    1620:	77 1f       	adc	r23, r23
    1622:	88 1f       	adc	r24, r24
    1624:	c2 f7       	brpl	.-16     	; 0x1616 <__addsf3x+0x6e>
    1626:	0e c0       	rjmp	.+28     	; 0x1644 <__addsf3x+0x9c>
    1628:	ba 0f       	add	r27, r26
    162a:	62 1f       	adc	r22, r18
    162c:	73 1f       	adc	r23, r19
    162e:	84 1f       	adc	r24, r20
    1630:	48 f4       	brcc	.+18     	; 0x1644 <__addsf3x+0x9c>
    1632:	87 95       	ror	r24
    1634:	77 95       	ror	r23
    1636:	67 95       	ror	r22
    1638:	b7 95       	ror	r27
    163a:	f7 95       	ror	r31
    163c:	9e 3f       	cpi	r25, 0xFE	; 254
    163e:	08 f0       	brcs	.+2      	; 0x1642 <__addsf3x+0x9a>
    1640:	b0 cf       	rjmp	.-160    	; 0x15a2 <__addsf3+0x28>
    1642:	93 95       	inc	r25
    1644:	88 0f       	add	r24, r24
    1646:	08 f0       	brcs	.+2      	; 0x164a <__addsf3x+0xa2>
    1648:	99 27       	eor	r25, r25
    164a:	ee 0f       	add	r30, r30
    164c:	97 95       	ror	r25
    164e:	87 95       	ror	r24
    1650:	08 95       	ret
    1652:	0e 94 30 0d 	call	0x1a60	; 0x1a60 <__fp_pscA>
    1656:	60 f0       	brcs	.+24     	; 0x1670 <__addsf3x+0xc8>
    1658:	80 e8       	ldi	r24, 0x80	; 128
    165a:	91 e0       	ldi	r25, 0x01	; 1
    165c:	09 f4       	brne	.+2      	; 0x1660 <__addsf3x+0xb8>
    165e:	9e ef       	ldi	r25, 0xFE	; 254
    1660:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__fp_pscB>
    1664:	28 f0       	brcs	.+10     	; 0x1670 <__addsf3x+0xc8>
    1666:	40 e8       	ldi	r20, 0x80	; 128
    1668:	51 e0       	ldi	r21, 0x01	; 1
    166a:	71 f4       	brne	.+28     	; 0x1688 <atan2+0x10>
    166c:	5e ef       	ldi	r21, 0xFE	; 254
    166e:	0c c0       	rjmp	.+24     	; 0x1688 <atan2+0x10>
    1670:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__fp_nan>
    1674:	0c 94 89 0d 	jmp	0x1b12	; 0x1b12 <__fp_zero>

00001678 <atan2>:
    1678:	e9 2f       	mov	r30, r25
    167a:	e0 78       	andi	r30, 0x80	; 128
    167c:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <__fp_split3>
    1680:	40 f3       	brcs	.-48     	; 0x1652 <__addsf3x+0xaa>
    1682:	09 2e       	mov	r0, r25
    1684:	05 2a       	or	r0, r21
    1686:	b1 f3       	breq	.-20     	; 0x1674 <__addsf3x+0xcc>
    1688:	26 17       	cp	r18, r22
    168a:	37 07       	cpc	r19, r23
    168c:	48 07       	cpc	r20, r24
    168e:	59 07       	cpc	r21, r25
    1690:	38 f0       	brcs	.+14     	; 0x16a0 <atan2+0x28>
    1692:	0e 2e       	mov	r0, r30
    1694:	07 f8       	bld	r0, 7
    1696:	e0 25       	eor	r30, r0
    1698:	69 f0       	breq	.+26     	; 0x16b4 <atan2+0x3c>
    169a:	e0 25       	eor	r30, r0
    169c:	e0 64       	ori	r30, 0x40	; 64
    169e:	0a c0       	rjmp	.+20     	; 0x16b4 <atan2+0x3c>
    16a0:	ef 63       	ori	r30, 0x3F	; 63
    16a2:	07 f8       	bld	r0, 7
    16a4:	00 94       	com	r0
    16a6:	07 fa       	bst	r0, 7
    16a8:	db 01       	movw	r26, r22
    16aa:	b9 01       	movw	r22, r18
    16ac:	9d 01       	movw	r18, r26
    16ae:	dc 01       	movw	r26, r24
    16b0:	ca 01       	movw	r24, r20
    16b2:	ad 01       	movw	r20, r26
    16b4:	ef 93       	push	r30
    16b6:	0e 94 ce 0b 	call	0x179c	; 0x179c <__divsf3_pse>
    16ba:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__fp_round>
    16be:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <atan>
    16c2:	5f 91       	pop	r21
    16c4:	55 23       	and	r21, r21
    16c6:	39 f0       	breq	.+14     	; 0x16d6 <atan2+0x5e>
    16c8:	2b ed       	ldi	r18, 0xDB	; 219
    16ca:	3f e0       	ldi	r19, 0x0F	; 15
    16cc:	49 e4       	ldi	r20, 0x49	; 73
    16ce:	50 fd       	sbrc	r21, 0
    16d0:	49 ec       	ldi	r20, 0xC9	; 201
    16d2:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__addsf3>
    16d6:	08 95       	ret

000016d8 <atan>:
    16d8:	df 93       	push	r29
    16da:	dd 27       	eor	r29, r29
    16dc:	b9 2f       	mov	r27, r25
    16de:	bf 77       	andi	r27, 0x7F	; 127
    16e0:	40 e8       	ldi	r20, 0x80	; 128
    16e2:	5f e3       	ldi	r21, 0x3F	; 63
    16e4:	16 16       	cp	r1, r22
    16e6:	17 06       	cpc	r1, r23
    16e8:	48 07       	cpc	r20, r24
    16ea:	5b 07       	cpc	r21, r27
    16ec:	18 f4       	brcc	.+6      	; 0x16f4 <atan+0x1c>
    16ee:	d9 2f       	mov	r29, r25
    16f0:	0e 94 95 0d 	call	0x1b2a	; 0x1b2a <inverse>
    16f4:	9f 93       	push	r25
    16f6:	8f 93       	push	r24
    16f8:	7f 93       	push	r23
    16fa:	6f 93       	push	r22
    16fc:	0e 94 0a 0e 	call	0x1c14	; 0x1c14 <square>
    1700:	e8 e6       	ldi	r30, 0x68	; 104
    1702:	f0 e0       	ldi	r31, 0x00	; 0
    1704:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__fp_powser>
    1708:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__fp_round>
    170c:	2f 91       	pop	r18
    170e:	3f 91       	pop	r19
    1710:	4f 91       	pop	r20
    1712:	5f 91       	pop	r21
    1714:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <__mulsf3x>
    1718:	dd 23       	and	r29, r29
    171a:	51 f0       	breq	.+20     	; 0x1730 <atan+0x58>
    171c:	90 58       	subi	r25, 0x80	; 128
    171e:	a2 ea       	ldi	r26, 0xA2	; 162
    1720:	2a ed       	ldi	r18, 0xDA	; 218
    1722:	3f e0       	ldi	r19, 0x0F	; 15
    1724:	49 ec       	ldi	r20, 0xC9	; 201
    1726:	5f e3       	ldi	r21, 0x3F	; 63
    1728:	d0 78       	andi	r29, 0x80	; 128
    172a:	5d 27       	eor	r21, r29
    172c:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <__addsf3x>
    1730:	df 91       	pop	r29
    1732:	0c 94 3e 0d 	jmp	0x1a7c	; 0x1a7c <__fp_round>

00001736 <ceil>:
    1736:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__fp_trunc>
    173a:	90 f0       	brcs	.+36     	; 0x1760 <ceil+0x2a>
    173c:	9f 37       	cpi	r25, 0x7F	; 127
    173e:	48 f4       	brcc	.+18     	; 0x1752 <ceil+0x1c>
    1740:	91 11       	cpse	r25, r1
    1742:	16 f4       	brtc	.+4      	; 0x1748 <ceil+0x12>
    1744:	0c 94 8a 0d 	jmp	0x1b14	; 0x1b14 <__fp_szero>
    1748:	60 e0       	ldi	r22, 0x00	; 0
    174a:	70 e0       	ldi	r23, 0x00	; 0
    174c:	80 e8       	ldi	r24, 0x80	; 128
    174e:	9f e3       	ldi	r25, 0x3F	; 63
    1750:	08 95       	ret
    1752:	26 f0       	brts	.+8      	; 0x175c <ceil+0x26>
    1754:	1b 16       	cp	r1, r27
    1756:	61 1d       	adc	r22, r1
    1758:	71 1d       	adc	r23, r1
    175a:	81 1d       	adc	r24, r1
    175c:	0c 94 dd 0c 	jmp	0x19ba	; 0x19ba <__fp_mintl>
    1760:	0c 94 f8 0c 	jmp	0x19f0	; 0x19f0 <__fp_mpack>

00001764 <__cmpsf2>:
    1764:	0e 94 b3 0c 	call	0x1966	; 0x1966 <__fp_cmp>
    1768:	08 f4       	brcc	.+2      	; 0x176c <__cmpsf2+0x8>
    176a:	81 e0       	ldi	r24, 0x01	; 1
    176c:	08 95       	ret

0000176e <__divsf3>:
    176e:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__divsf3x>
    1772:	0c 94 3e 0d 	jmp	0x1a7c	; 0x1a7c <__fp_round>
    1776:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__fp_pscB>
    177a:	58 f0       	brcs	.+22     	; 0x1792 <__divsf3+0x24>
    177c:	0e 94 30 0d 	call	0x1a60	; 0x1a60 <__fp_pscA>
    1780:	40 f0       	brcs	.+16     	; 0x1792 <__divsf3+0x24>
    1782:	29 f4       	brne	.+10     	; 0x178e <__divsf3+0x20>
    1784:	5f 3f       	cpi	r21, 0xFF	; 255
    1786:	29 f0       	breq	.+10     	; 0x1792 <__divsf3+0x24>
    1788:	0c 94 d7 0c 	jmp	0x19ae	; 0x19ae <__fp_inf>
    178c:	51 11       	cpse	r21, r1
    178e:	0c 94 8a 0d 	jmp	0x1b14	; 0x1b14 <__fp_szero>
    1792:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__fp_nan>

00001796 <__divsf3x>:
    1796:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <__fp_split3>
    179a:	68 f3       	brcs	.-38     	; 0x1776 <__divsf3+0x8>

0000179c <__divsf3_pse>:
    179c:	99 23       	and	r25, r25
    179e:	b1 f3       	breq	.-20     	; 0x178c <__divsf3+0x1e>
    17a0:	55 23       	and	r21, r21
    17a2:	91 f3       	breq	.-28     	; 0x1788 <__divsf3+0x1a>
    17a4:	95 1b       	sub	r25, r21
    17a6:	55 0b       	sbc	r21, r21
    17a8:	bb 27       	eor	r27, r27
    17aa:	aa 27       	eor	r26, r26
    17ac:	62 17       	cp	r22, r18
    17ae:	73 07       	cpc	r23, r19
    17b0:	84 07       	cpc	r24, r20
    17b2:	38 f0       	brcs	.+14     	; 0x17c2 <__divsf3_pse+0x26>
    17b4:	9f 5f       	subi	r25, 0xFF	; 255
    17b6:	5f 4f       	sbci	r21, 0xFF	; 255
    17b8:	22 0f       	add	r18, r18
    17ba:	33 1f       	adc	r19, r19
    17bc:	44 1f       	adc	r20, r20
    17be:	aa 1f       	adc	r26, r26
    17c0:	a9 f3       	breq	.-22     	; 0x17ac <__divsf3_pse+0x10>
    17c2:	35 d0       	rcall	.+106    	; 0x182e <__divsf3_pse+0x92>
    17c4:	0e 2e       	mov	r0, r30
    17c6:	3a f0       	brmi	.+14     	; 0x17d6 <__divsf3_pse+0x3a>
    17c8:	e0 e8       	ldi	r30, 0x80	; 128
    17ca:	32 d0       	rcall	.+100    	; 0x1830 <__divsf3_pse+0x94>
    17cc:	91 50       	subi	r25, 0x01	; 1
    17ce:	50 40       	sbci	r21, 0x00	; 0
    17d0:	e6 95       	lsr	r30
    17d2:	00 1c       	adc	r0, r0
    17d4:	ca f7       	brpl	.-14     	; 0x17c8 <__divsf3_pse+0x2c>
    17d6:	2b d0       	rcall	.+86     	; 0x182e <__divsf3_pse+0x92>
    17d8:	fe 2f       	mov	r31, r30
    17da:	29 d0       	rcall	.+82     	; 0x182e <__divsf3_pse+0x92>
    17dc:	66 0f       	add	r22, r22
    17de:	77 1f       	adc	r23, r23
    17e0:	88 1f       	adc	r24, r24
    17e2:	bb 1f       	adc	r27, r27
    17e4:	26 17       	cp	r18, r22
    17e6:	37 07       	cpc	r19, r23
    17e8:	48 07       	cpc	r20, r24
    17ea:	ab 07       	cpc	r26, r27
    17ec:	b0 e8       	ldi	r27, 0x80	; 128
    17ee:	09 f0       	breq	.+2      	; 0x17f2 <__divsf3_pse+0x56>
    17f0:	bb 0b       	sbc	r27, r27
    17f2:	80 2d       	mov	r24, r0
    17f4:	bf 01       	movw	r22, r30
    17f6:	ff 27       	eor	r31, r31
    17f8:	93 58       	subi	r25, 0x83	; 131
    17fa:	5f 4f       	sbci	r21, 0xFF	; 255
    17fc:	3a f0       	brmi	.+14     	; 0x180c <__divsf3_pse+0x70>
    17fe:	9e 3f       	cpi	r25, 0xFE	; 254
    1800:	51 05       	cpc	r21, r1
    1802:	78 f0       	brcs	.+30     	; 0x1822 <__divsf3_pse+0x86>
    1804:	0c 94 d7 0c 	jmp	0x19ae	; 0x19ae <__fp_inf>
    1808:	0c 94 8a 0d 	jmp	0x1b14	; 0x1b14 <__fp_szero>
    180c:	5f 3f       	cpi	r21, 0xFF	; 255
    180e:	e4 f3       	brlt	.-8      	; 0x1808 <__divsf3_pse+0x6c>
    1810:	98 3e       	cpi	r25, 0xE8	; 232
    1812:	d4 f3       	brlt	.-12     	; 0x1808 <__divsf3_pse+0x6c>
    1814:	86 95       	lsr	r24
    1816:	77 95       	ror	r23
    1818:	67 95       	ror	r22
    181a:	b7 95       	ror	r27
    181c:	f7 95       	ror	r31
    181e:	9f 5f       	subi	r25, 0xFF	; 255
    1820:	c9 f7       	brne	.-14     	; 0x1814 <__divsf3_pse+0x78>
    1822:	88 0f       	add	r24, r24
    1824:	91 1d       	adc	r25, r1
    1826:	96 95       	lsr	r25
    1828:	87 95       	ror	r24
    182a:	97 f9       	bld	r25, 7
    182c:	08 95       	ret
    182e:	e1 e0       	ldi	r30, 0x01	; 1
    1830:	66 0f       	add	r22, r22
    1832:	77 1f       	adc	r23, r23
    1834:	88 1f       	adc	r24, r24
    1836:	bb 1f       	adc	r27, r27
    1838:	62 17       	cp	r22, r18
    183a:	73 07       	cpc	r23, r19
    183c:	84 07       	cpc	r24, r20
    183e:	ba 07       	cpc	r27, r26
    1840:	20 f0       	brcs	.+8      	; 0x184a <__divsf3_pse+0xae>
    1842:	62 1b       	sub	r22, r18
    1844:	73 0b       	sbc	r23, r19
    1846:	84 0b       	sbc	r24, r20
    1848:	ba 0b       	sbc	r27, r26
    184a:	ee 1f       	adc	r30, r30
    184c:	88 f7       	brcc	.-30     	; 0x1830 <__divsf3_pse+0x94>
    184e:	e0 95       	com	r30
    1850:	08 95       	ret

00001852 <__fixsfsi>:
    1852:	0e 94 30 0c 	call	0x1860	; 0x1860 <__fixunssfsi>
    1856:	68 94       	set
    1858:	b1 11       	cpse	r27, r1
    185a:	0c 94 8a 0d 	jmp	0x1b14	; 0x1b14 <__fp_szero>
    185e:	08 95       	ret

00001860 <__fixunssfsi>:
    1860:	0e 94 57 0d 	call	0x1aae	; 0x1aae <__fp_splitA>
    1864:	88 f0       	brcs	.+34     	; 0x1888 <__fixunssfsi+0x28>
    1866:	9f 57       	subi	r25, 0x7F	; 127
    1868:	98 f0       	brcs	.+38     	; 0x1890 <__fixunssfsi+0x30>
    186a:	b9 2f       	mov	r27, r25
    186c:	99 27       	eor	r25, r25
    186e:	b7 51       	subi	r27, 0x17	; 23
    1870:	b0 f0       	brcs	.+44     	; 0x189e <__fixunssfsi+0x3e>
    1872:	e1 f0       	breq	.+56     	; 0x18ac <__fixunssfsi+0x4c>
    1874:	66 0f       	add	r22, r22
    1876:	77 1f       	adc	r23, r23
    1878:	88 1f       	adc	r24, r24
    187a:	99 1f       	adc	r25, r25
    187c:	1a f0       	brmi	.+6      	; 0x1884 <__fixunssfsi+0x24>
    187e:	ba 95       	dec	r27
    1880:	c9 f7       	brne	.-14     	; 0x1874 <__fixunssfsi+0x14>
    1882:	14 c0       	rjmp	.+40     	; 0x18ac <__fixunssfsi+0x4c>
    1884:	b1 30       	cpi	r27, 0x01	; 1
    1886:	91 f0       	breq	.+36     	; 0x18ac <__fixunssfsi+0x4c>
    1888:	0e 94 89 0d 	call	0x1b12	; 0x1b12 <__fp_zero>
    188c:	b1 e0       	ldi	r27, 0x01	; 1
    188e:	08 95       	ret
    1890:	0c 94 89 0d 	jmp	0x1b12	; 0x1b12 <__fp_zero>
    1894:	67 2f       	mov	r22, r23
    1896:	78 2f       	mov	r23, r24
    1898:	88 27       	eor	r24, r24
    189a:	b8 5f       	subi	r27, 0xF8	; 248
    189c:	39 f0       	breq	.+14     	; 0x18ac <__fixunssfsi+0x4c>
    189e:	b9 3f       	cpi	r27, 0xF9	; 249
    18a0:	cc f3       	brlt	.-14     	; 0x1894 <__fixunssfsi+0x34>
    18a2:	86 95       	lsr	r24
    18a4:	77 95       	ror	r23
    18a6:	67 95       	ror	r22
    18a8:	b3 95       	inc	r27
    18aa:	d9 f7       	brne	.-10     	; 0x18a2 <__fixunssfsi+0x42>
    18ac:	3e f4       	brtc	.+14     	; 0x18bc <__fixunssfsi+0x5c>
    18ae:	90 95       	com	r25
    18b0:	80 95       	com	r24
    18b2:	70 95       	com	r23
    18b4:	61 95       	neg	r22
    18b6:	7f 4f       	sbci	r23, 0xFF	; 255
    18b8:	8f 4f       	sbci	r24, 0xFF	; 255
    18ba:	9f 4f       	sbci	r25, 0xFF	; 255
    18bc:	08 95       	ret

000018be <__floatunsisf>:
    18be:	e8 94       	clt
    18c0:	09 c0       	rjmp	.+18     	; 0x18d4 <__floatsisf+0x12>

000018c2 <__floatsisf>:
    18c2:	97 fb       	bst	r25, 7
    18c4:	3e f4       	brtc	.+14     	; 0x18d4 <__floatsisf+0x12>
    18c6:	90 95       	com	r25
    18c8:	80 95       	com	r24
    18ca:	70 95       	com	r23
    18cc:	61 95       	neg	r22
    18ce:	7f 4f       	sbci	r23, 0xFF	; 255
    18d0:	8f 4f       	sbci	r24, 0xFF	; 255
    18d2:	9f 4f       	sbci	r25, 0xFF	; 255
    18d4:	99 23       	and	r25, r25
    18d6:	a9 f0       	breq	.+42     	; 0x1902 <__floatsisf+0x40>
    18d8:	f9 2f       	mov	r31, r25
    18da:	96 e9       	ldi	r25, 0x96	; 150
    18dc:	bb 27       	eor	r27, r27
    18de:	93 95       	inc	r25
    18e0:	f6 95       	lsr	r31
    18e2:	87 95       	ror	r24
    18e4:	77 95       	ror	r23
    18e6:	67 95       	ror	r22
    18e8:	b7 95       	ror	r27
    18ea:	f1 11       	cpse	r31, r1
    18ec:	f8 cf       	rjmp	.-16     	; 0x18de <__floatsisf+0x1c>
    18ee:	fa f4       	brpl	.+62     	; 0x192e <__floatsisf+0x6c>
    18f0:	bb 0f       	add	r27, r27
    18f2:	11 f4       	brne	.+4      	; 0x18f8 <__floatsisf+0x36>
    18f4:	60 ff       	sbrs	r22, 0
    18f6:	1b c0       	rjmp	.+54     	; 0x192e <__floatsisf+0x6c>
    18f8:	6f 5f       	subi	r22, 0xFF	; 255
    18fa:	7f 4f       	sbci	r23, 0xFF	; 255
    18fc:	8f 4f       	sbci	r24, 0xFF	; 255
    18fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1900:	16 c0       	rjmp	.+44     	; 0x192e <__floatsisf+0x6c>
    1902:	88 23       	and	r24, r24
    1904:	11 f0       	breq	.+4      	; 0x190a <__floatsisf+0x48>
    1906:	96 e9       	ldi	r25, 0x96	; 150
    1908:	11 c0       	rjmp	.+34     	; 0x192c <__floatsisf+0x6a>
    190a:	77 23       	and	r23, r23
    190c:	21 f0       	breq	.+8      	; 0x1916 <__floatsisf+0x54>
    190e:	9e e8       	ldi	r25, 0x8E	; 142
    1910:	87 2f       	mov	r24, r23
    1912:	76 2f       	mov	r23, r22
    1914:	05 c0       	rjmp	.+10     	; 0x1920 <__floatsisf+0x5e>
    1916:	66 23       	and	r22, r22
    1918:	71 f0       	breq	.+28     	; 0x1936 <__floatsisf+0x74>
    191a:	96 e8       	ldi	r25, 0x86	; 134
    191c:	86 2f       	mov	r24, r22
    191e:	70 e0       	ldi	r23, 0x00	; 0
    1920:	60 e0       	ldi	r22, 0x00	; 0
    1922:	2a f0       	brmi	.+10     	; 0x192e <__floatsisf+0x6c>
    1924:	9a 95       	dec	r25
    1926:	66 0f       	add	r22, r22
    1928:	77 1f       	adc	r23, r23
    192a:	88 1f       	adc	r24, r24
    192c:	da f7       	brpl	.-10     	; 0x1924 <__floatsisf+0x62>
    192e:	88 0f       	add	r24, r24
    1930:	96 95       	lsr	r25
    1932:	87 95       	ror	r24
    1934:	97 f9       	bld	r25, 7
    1936:	08 95       	ret

00001938 <floor>:
    1938:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__fp_trunc>
    193c:	90 f0       	brcs	.+36     	; 0x1962 <floor+0x2a>
    193e:	9f 37       	cpi	r25, 0x7F	; 127
    1940:	48 f4       	brcc	.+18     	; 0x1954 <floor+0x1c>
    1942:	91 11       	cpse	r25, r1
    1944:	16 f0       	brts	.+4      	; 0x194a <floor+0x12>
    1946:	0c 94 8a 0d 	jmp	0x1b14	; 0x1b14 <__fp_szero>
    194a:	60 e0       	ldi	r22, 0x00	; 0
    194c:	70 e0       	ldi	r23, 0x00	; 0
    194e:	80 e8       	ldi	r24, 0x80	; 128
    1950:	9f eb       	ldi	r25, 0xBF	; 191
    1952:	08 95       	ret
    1954:	26 f4       	brtc	.+8      	; 0x195e <floor+0x26>
    1956:	1b 16       	cp	r1, r27
    1958:	61 1d       	adc	r22, r1
    195a:	71 1d       	adc	r23, r1
    195c:	81 1d       	adc	r24, r1
    195e:	0c 94 dd 0c 	jmp	0x19ba	; 0x19ba <__fp_mintl>
    1962:	0c 94 f8 0c 	jmp	0x19f0	; 0x19f0 <__fp_mpack>

00001966 <__fp_cmp>:
    1966:	99 0f       	add	r25, r25
    1968:	00 08       	sbc	r0, r0
    196a:	55 0f       	add	r21, r21
    196c:	aa 0b       	sbc	r26, r26
    196e:	e0 e8       	ldi	r30, 0x80	; 128
    1970:	fe ef       	ldi	r31, 0xFE	; 254
    1972:	16 16       	cp	r1, r22
    1974:	17 06       	cpc	r1, r23
    1976:	e8 07       	cpc	r30, r24
    1978:	f9 07       	cpc	r31, r25
    197a:	c0 f0       	brcs	.+48     	; 0x19ac <__fp_cmp+0x46>
    197c:	12 16       	cp	r1, r18
    197e:	13 06       	cpc	r1, r19
    1980:	e4 07       	cpc	r30, r20
    1982:	f5 07       	cpc	r31, r21
    1984:	98 f0       	brcs	.+38     	; 0x19ac <__fp_cmp+0x46>
    1986:	62 1b       	sub	r22, r18
    1988:	73 0b       	sbc	r23, r19
    198a:	84 0b       	sbc	r24, r20
    198c:	95 0b       	sbc	r25, r21
    198e:	39 f4       	brne	.+14     	; 0x199e <__fp_cmp+0x38>
    1990:	0a 26       	eor	r0, r26
    1992:	61 f0       	breq	.+24     	; 0x19ac <__fp_cmp+0x46>
    1994:	23 2b       	or	r18, r19
    1996:	24 2b       	or	r18, r20
    1998:	25 2b       	or	r18, r21
    199a:	21 f4       	brne	.+8      	; 0x19a4 <__fp_cmp+0x3e>
    199c:	08 95       	ret
    199e:	0a 26       	eor	r0, r26
    19a0:	09 f4       	brne	.+2      	; 0x19a4 <__fp_cmp+0x3e>
    19a2:	a1 40       	sbci	r26, 0x01	; 1
    19a4:	a6 95       	lsr	r26
    19a6:	8f ef       	ldi	r24, 0xFF	; 255
    19a8:	81 1d       	adc	r24, r1
    19aa:	81 1d       	adc	r24, r1
    19ac:	08 95       	ret

000019ae <__fp_inf>:
    19ae:	97 f9       	bld	r25, 7
    19b0:	9f 67       	ori	r25, 0x7F	; 127
    19b2:	80 e8       	ldi	r24, 0x80	; 128
    19b4:	70 e0       	ldi	r23, 0x00	; 0
    19b6:	60 e0       	ldi	r22, 0x00	; 0
    19b8:	08 95       	ret

000019ba <__fp_mintl>:
    19ba:	88 23       	and	r24, r24
    19bc:	71 f4       	brne	.+28     	; 0x19da <__fp_mintl+0x20>
    19be:	77 23       	and	r23, r23
    19c0:	21 f0       	breq	.+8      	; 0x19ca <__fp_mintl+0x10>
    19c2:	98 50       	subi	r25, 0x08	; 8
    19c4:	87 2b       	or	r24, r23
    19c6:	76 2f       	mov	r23, r22
    19c8:	07 c0       	rjmp	.+14     	; 0x19d8 <__fp_mintl+0x1e>
    19ca:	66 23       	and	r22, r22
    19cc:	11 f4       	brne	.+4      	; 0x19d2 <__fp_mintl+0x18>
    19ce:	99 27       	eor	r25, r25
    19d0:	0d c0       	rjmp	.+26     	; 0x19ec <__fp_mintl+0x32>
    19d2:	90 51       	subi	r25, 0x10	; 16
    19d4:	86 2b       	or	r24, r22
    19d6:	70 e0       	ldi	r23, 0x00	; 0
    19d8:	60 e0       	ldi	r22, 0x00	; 0
    19da:	2a f0       	brmi	.+10     	; 0x19e6 <__fp_mintl+0x2c>
    19dc:	9a 95       	dec	r25
    19de:	66 0f       	add	r22, r22
    19e0:	77 1f       	adc	r23, r23
    19e2:	88 1f       	adc	r24, r24
    19e4:	da f7       	brpl	.-10     	; 0x19dc <__fp_mintl+0x22>
    19e6:	88 0f       	add	r24, r24
    19e8:	96 95       	lsr	r25
    19ea:	87 95       	ror	r24
    19ec:	97 f9       	bld	r25, 7
    19ee:	08 95       	ret

000019f0 <__fp_mpack>:
    19f0:	9f 3f       	cpi	r25, 0xFF	; 255
    19f2:	31 f0       	breq	.+12     	; 0x1a00 <__fp_mpack_finite+0xc>

000019f4 <__fp_mpack_finite>:
    19f4:	91 50       	subi	r25, 0x01	; 1
    19f6:	20 f4       	brcc	.+8      	; 0x1a00 <__fp_mpack_finite+0xc>
    19f8:	87 95       	ror	r24
    19fa:	77 95       	ror	r23
    19fc:	67 95       	ror	r22
    19fe:	b7 95       	ror	r27
    1a00:	88 0f       	add	r24, r24
    1a02:	91 1d       	adc	r25, r1
    1a04:	96 95       	lsr	r25
    1a06:	87 95       	ror	r24
    1a08:	97 f9       	bld	r25, 7
    1a0a:	08 95       	ret

00001a0c <__fp_nan>:
    1a0c:	9f ef       	ldi	r25, 0xFF	; 255
    1a0e:	80 ec       	ldi	r24, 0xC0	; 192
    1a10:	08 95       	ret

00001a12 <__fp_powser>:
    1a12:	df 93       	push	r29
    1a14:	cf 93       	push	r28
    1a16:	1f 93       	push	r17
    1a18:	0f 93       	push	r16
    1a1a:	ff 92       	push	r15
    1a1c:	ef 92       	push	r14
    1a1e:	df 92       	push	r13
    1a20:	7b 01       	movw	r14, r22
    1a22:	8c 01       	movw	r16, r24
    1a24:	68 94       	set
    1a26:	06 c0       	rjmp	.+12     	; 0x1a34 <__fp_powser+0x22>
    1a28:	da 2e       	mov	r13, r26
    1a2a:	ef 01       	movw	r28, r30
    1a2c:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <__mulsf3x>
    1a30:	fe 01       	movw	r30, r28
    1a32:	e8 94       	clt
    1a34:	a5 91       	lpm	r26, Z+
    1a36:	25 91       	lpm	r18, Z+
    1a38:	35 91       	lpm	r19, Z+
    1a3a:	45 91       	lpm	r20, Z+
    1a3c:	55 91       	lpm	r21, Z+
    1a3e:	a6 f3       	brts	.-24     	; 0x1a28 <__fp_powser+0x16>
    1a40:	ef 01       	movw	r28, r30
    1a42:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <__addsf3x>
    1a46:	fe 01       	movw	r30, r28
    1a48:	97 01       	movw	r18, r14
    1a4a:	a8 01       	movw	r20, r16
    1a4c:	da 94       	dec	r13
    1a4e:	69 f7       	brne	.-38     	; 0x1a2a <__fp_powser+0x18>
    1a50:	df 90       	pop	r13
    1a52:	ef 90       	pop	r14
    1a54:	ff 90       	pop	r15
    1a56:	0f 91       	pop	r16
    1a58:	1f 91       	pop	r17
    1a5a:	cf 91       	pop	r28
    1a5c:	df 91       	pop	r29
    1a5e:	08 95       	ret

00001a60 <__fp_pscA>:
    1a60:	00 24       	eor	r0, r0
    1a62:	0a 94       	dec	r0
    1a64:	16 16       	cp	r1, r22
    1a66:	17 06       	cpc	r1, r23
    1a68:	18 06       	cpc	r1, r24
    1a6a:	09 06       	cpc	r0, r25
    1a6c:	08 95       	ret

00001a6e <__fp_pscB>:
    1a6e:	00 24       	eor	r0, r0
    1a70:	0a 94       	dec	r0
    1a72:	12 16       	cp	r1, r18
    1a74:	13 06       	cpc	r1, r19
    1a76:	14 06       	cpc	r1, r20
    1a78:	05 06       	cpc	r0, r21
    1a7a:	08 95       	ret

00001a7c <__fp_round>:
    1a7c:	09 2e       	mov	r0, r25
    1a7e:	03 94       	inc	r0
    1a80:	00 0c       	add	r0, r0
    1a82:	11 f4       	brne	.+4      	; 0x1a88 <__fp_round+0xc>
    1a84:	88 23       	and	r24, r24
    1a86:	52 f0       	brmi	.+20     	; 0x1a9c <__fp_round+0x20>
    1a88:	bb 0f       	add	r27, r27
    1a8a:	40 f4       	brcc	.+16     	; 0x1a9c <__fp_round+0x20>
    1a8c:	bf 2b       	or	r27, r31
    1a8e:	11 f4       	brne	.+4      	; 0x1a94 <__fp_round+0x18>
    1a90:	60 ff       	sbrs	r22, 0
    1a92:	04 c0       	rjmp	.+8      	; 0x1a9c <__fp_round+0x20>
    1a94:	6f 5f       	subi	r22, 0xFF	; 255
    1a96:	7f 4f       	sbci	r23, 0xFF	; 255
    1a98:	8f 4f       	sbci	r24, 0xFF	; 255
    1a9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a9c:	08 95       	ret

00001a9e <__fp_split3>:
    1a9e:	57 fd       	sbrc	r21, 7
    1aa0:	90 58       	subi	r25, 0x80	; 128
    1aa2:	44 0f       	add	r20, r20
    1aa4:	55 1f       	adc	r21, r21
    1aa6:	59 f0       	breq	.+22     	; 0x1abe <__fp_splitA+0x10>
    1aa8:	5f 3f       	cpi	r21, 0xFF	; 255
    1aaa:	71 f0       	breq	.+28     	; 0x1ac8 <__fp_splitA+0x1a>
    1aac:	47 95       	ror	r20

00001aae <__fp_splitA>:
    1aae:	88 0f       	add	r24, r24
    1ab0:	97 fb       	bst	r25, 7
    1ab2:	99 1f       	adc	r25, r25
    1ab4:	61 f0       	breq	.+24     	; 0x1ace <__fp_splitA+0x20>
    1ab6:	9f 3f       	cpi	r25, 0xFF	; 255
    1ab8:	79 f0       	breq	.+30     	; 0x1ad8 <__fp_splitA+0x2a>
    1aba:	87 95       	ror	r24
    1abc:	08 95       	ret
    1abe:	12 16       	cp	r1, r18
    1ac0:	13 06       	cpc	r1, r19
    1ac2:	14 06       	cpc	r1, r20
    1ac4:	55 1f       	adc	r21, r21
    1ac6:	f2 cf       	rjmp	.-28     	; 0x1aac <__fp_split3+0xe>
    1ac8:	46 95       	lsr	r20
    1aca:	f1 df       	rcall	.-30     	; 0x1aae <__fp_splitA>
    1acc:	08 c0       	rjmp	.+16     	; 0x1ade <__fp_splitA+0x30>
    1ace:	16 16       	cp	r1, r22
    1ad0:	17 06       	cpc	r1, r23
    1ad2:	18 06       	cpc	r1, r24
    1ad4:	99 1f       	adc	r25, r25
    1ad6:	f1 cf       	rjmp	.-30     	; 0x1aba <__fp_splitA+0xc>
    1ad8:	86 95       	lsr	r24
    1ada:	71 05       	cpc	r23, r1
    1adc:	61 05       	cpc	r22, r1
    1ade:	08 94       	sec
    1ae0:	08 95       	ret

00001ae2 <__fp_trunc>:
    1ae2:	0e 94 57 0d 	call	0x1aae	; 0x1aae <__fp_splitA>
    1ae6:	a0 f0       	brcs	.+40     	; 0x1b10 <__fp_trunc+0x2e>
    1ae8:	be e7       	ldi	r27, 0x7E	; 126
    1aea:	b9 17       	cp	r27, r25
    1aec:	88 f4       	brcc	.+34     	; 0x1b10 <__fp_trunc+0x2e>
    1aee:	bb 27       	eor	r27, r27
    1af0:	9f 38       	cpi	r25, 0x8F	; 143
    1af2:	60 f4       	brcc	.+24     	; 0x1b0c <__fp_trunc+0x2a>
    1af4:	16 16       	cp	r1, r22
    1af6:	b1 1d       	adc	r27, r1
    1af8:	67 2f       	mov	r22, r23
    1afa:	78 2f       	mov	r23, r24
    1afc:	88 27       	eor	r24, r24
    1afe:	98 5f       	subi	r25, 0xF8	; 248
    1b00:	f7 cf       	rjmp	.-18     	; 0x1af0 <__fp_trunc+0xe>
    1b02:	86 95       	lsr	r24
    1b04:	77 95       	ror	r23
    1b06:	67 95       	ror	r22
    1b08:	b1 1d       	adc	r27, r1
    1b0a:	93 95       	inc	r25
    1b0c:	96 39       	cpi	r25, 0x96	; 150
    1b0e:	c8 f3       	brcs	.-14     	; 0x1b02 <__fp_trunc+0x20>
    1b10:	08 95       	ret

00001b12 <__fp_zero>:
    1b12:	e8 94       	clt

00001b14 <__fp_szero>:
    1b14:	bb 27       	eor	r27, r27
    1b16:	66 27       	eor	r22, r22
    1b18:	77 27       	eor	r23, r23
    1b1a:	cb 01       	movw	r24, r22
    1b1c:	97 f9       	bld	r25, 7
    1b1e:	08 95       	ret

00001b20 <__gesf2>:
    1b20:	0e 94 b3 0c 	call	0x1966	; 0x1966 <__fp_cmp>
    1b24:	08 f4       	brcc	.+2      	; 0x1b28 <__gesf2+0x8>
    1b26:	8f ef       	ldi	r24, 0xFF	; 255
    1b28:	08 95       	ret

00001b2a <inverse>:
    1b2a:	9b 01       	movw	r18, r22
    1b2c:	ac 01       	movw	r20, r24
    1b2e:	60 e0       	ldi	r22, 0x00	; 0
    1b30:	70 e0       	ldi	r23, 0x00	; 0
    1b32:	80 e8       	ldi	r24, 0x80	; 128
    1b34:	9f e3       	ldi	r25, 0x3F	; 63
    1b36:	0c 94 b7 0b 	jmp	0x176e	; 0x176e <__divsf3>

00001b3a <__mulsf3>:
    1b3a:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <__mulsf3x>
    1b3e:	0c 94 3e 0d 	jmp	0x1a7c	; 0x1a7c <__fp_round>
    1b42:	0e 94 30 0d 	call	0x1a60	; 0x1a60 <__fp_pscA>
    1b46:	38 f0       	brcs	.+14     	; 0x1b56 <__mulsf3+0x1c>
    1b48:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__fp_pscB>
    1b4c:	20 f0       	brcs	.+8      	; 0x1b56 <__mulsf3+0x1c>
    1b4e:	95 23       	and	r25, r21
    1b50:	11 f0       	breq	.+4      	; 0x1b56 <__mulsf3+0x1c>
    1b52:	0c 94 d7 0c 	jmp	0x19ae	; 0x19ae <__fp_inf>
    1b56:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__fp_nan>
    1b5a:	11 24       	eor	r1, r1
    1b5c:	0c 94 8a 0d 	jmp	0x1b14	; 0x1b14 <__fp_szero>

00001b60 <__mulsf3x>:
    1b60:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <__fp_split3>
    1b64:	70 f3       	brcs	.-36     	; 0x1b42 <__mulsf3+0x8>

00001b66 <__mulsf3_pse>:
    1b66:	95 9f       	mul	r25, r21
    1b68:	c1 f3       	breq	.-16     	; 0x1b5a <__mulsf3+0x20>
    1b6a:	95 0f       	add	r25, r21
    1b6c:	50 e0       	ldi	r21, 0x00	; 0
    1b6e:	55 1f       	adc	r21, r21
    1b70:	62 9f       	mul	r22, r18
    1b72:	f0 01       	movw	r30, r0
    1b74:	72 9f       	mul	r23, r18
    1b76:	bb 27       	eor	r27, r27
    1b78:	f0 0d       	add	r31, r0
    1b7a:	b1 1d       	adc	r27, r1
    1b7c:	63 9f       	mul	r22, r19
    1b7e:	aa 27       	eor	r26, r26
    1b80:	f0 0d       	add	r31, r0
    1b82:	b1 1d       	adc	r27, r1
    1b84:	aa 1f       	adc	r26, r26
    1b86:	64 9f       	mul	r22, r20
    1b88:	66 27       	eor	r22, r22
    1b8a:	b0 0d       	add	r27, r0
    1b8c:	a1 1d       	adc	r26, r1
    1b8e:	66 1f       	adc	r22, r22
    1b90:	82 9f       	mul	r24, r18
    1b92:	22 27       	eor	r18, r18
    1b94:	b0 0d       	add	r27, r0
    1b96:	a1 1d       	adc	r26, r1
    1b98:	62 1f       	adc	r22, r18
    1b9a:	73 9f       	mul	r23, r19
    1b9c:	b0 0d       	add	r27, r0
    1b9e:	a1 1d       	adc	r26, r1
    1ba0:	62 1f       	adc	r22, r18
    1ba2:	83 9f       	mul	r24, r19
    1ba4:	a0 0d       	add	r26, r0
    1ba6:	61 1d       	adc	r22, r1
    1ba8:	22 1f       	adc	r18, r18
    1baa:	74 9f       	mul	r23, r20
    1bac:	33 27       	eor	r19, r19
    1bae:	a0 0d       	add	r26, r0
    1bb0:	61 1d       	adc	r22, r1
    1bb2:	23 1f       	adc	r18, r19
    1bb4:	84 9f       	mul	r24, r20
    1bb6:	60 0d       	add	r22, r0
    1bb8:	21 1d       	adc	r18, r1
    1bba:	82 2f       	mov	r24, r18
    1bbc:	76 2f       	mov	r23, r22
    1bbe:	6a 2f       	mov	r22, r26
    1bc0:	11 24       	eor	r1, r1
    1bc2:	9f 57       	subi	r25, 0x7F	; 127
    1bc4:	50 40       	sbci	r21, 0x00	; 0
    1bc6:	9a f0       	brmi	.+38     	; 0x1bee <__mulsf3_pse+0x88>
    1bc8:	f1 f0       	breq	.+60     	; 0x1c06 <__mulsf3_pse+0xa0>
    1bca:	88 23       	and	r24, r24
    1bcc:	4a f0       	brmi	.+18     	; 0x1be0 <__mulsf3_pse+0x7a>
    1bce:	ee 0f       	add	r30, r30
    1bd0:	ff 1f       	adc	r31, r31
    1bd2:	bb 1f       	adc	r27, r27
    1bd4:	66 1f       	adc	r22, r22
    1bd6:	77 1f       	adc	r23, r23
    1bd8:	88 1f       	adc	r24, r24
    1bda:	91 50       	subi	r25, 0x01	; 1
    1bdc:	50 40       	sbci	r21, 0x00	; 0
    1bde:	a9 f7       	brne	.-22     	; 0x1bca <__mulsf3_pse+0x64>
    1be0:	9e 3f       	cpi	r25, 0xFE	; 254
    1be2:	51 05       	cpc	r21, r1
    1be4:	80 f0       	brcs	.+32     	; 0x1c06 <__mulsf3_pse+0xa0>
    1be6:	0c 94 d7 0c 	jmp	0x19ae	; 0x19ae <__fp_inf>
    1bea:	0c 94 8a 0d 	jmp	0x1b14	; 0x1b14 <__fp_szero>
    1bee:	5f 3f       	cpi	r21, 0xFF	; 255
    1bf0:	e4 f3       	brlt	.-8      	; 0x1bea <__mulsf3_pse+0x84>
    1bf2:	98 3e       	cpi	r25, 0xE8	; 232
    1bf4:	d4 f3       	brlt	.-12     	; 0x1bea <__mulsf3_pse+0x84>
    1bf6:	86 95       	lsr	r24
    1bf8:	77 95       	ror	r23
    1bfa:	67 95       	ror	r22
    1bfc:	b7 95       	ror	r27
    1bfe:	f7 95       	ror	r31
    1c00:	e7 95       	ror	r30
    1c02:	9f 5f       	subi	r25, 0xFF	; 255
    1c04:	c1 f7       	brne	.-16     	; 0x1bf6 <__mulsf3_pse+0x90>
    1c06:	fe 2b       	or	r31, r30
    1c08:	88 0f       	add	r24, r24
    1c0a:	91 1d       	adc	r25, r1
    1c0c:	96 95       	lsr	r25
    1c0e:	87 95       	ror	r24
    1c10:	97 f9       	bld	r25, 7
    1c12:	08 95       	ret

00001c14 <square>:
    1c14:	9b 01       	movw	r18, r22
    1c16:	ac 01       	movw	r20, r24
    1c18:	0c 94 9d 0d 	jmp	0x1b3a	; 0x1b3a <__mulsf3>

00001c1c <__unordsf2>:
    1c1c:	0e 94 b3 0c 	call	0x1966	; 0x1966 <__fp_cmp>
    1c20:	88 0b       	sbc	r24, r24
    1c22:	99 0b       	sbc	r25, r25
    1c24:	08 95       	ret

00001c26 <__udivmodsi4>:
    1c26:	a1 e2       	ldi	r26, 0x21	; 33
    1c28:	1a 2e       	mov	r1, r26
    1c2a:	aa 1b       	sub	r26, r26
    1c2c:	bb 1b       	sub	r27, r27
    1c2e:	fd 01       	movw	r30, r26
    1c30:	0d c0       	rjmp	.+26     	; 0x1c4c <__udivmodsi4_ep>

00001c32 <__udivmodsi4_loop>:
    1c32:	aa 1f       	adc	r26, r26
    1c34:	bb 1f       	adc	r27, r27
    1c36:	ee 1f       	adc	r30, r30
    1c38:	ff 1f       	adc	r31, r31
    1c3a:	a2 17       	cp	r26, r18
    1c3c:	b3 07       	cpc	r27, r19
    1c3e:	e4 07       	cpc	r30, r20
    1c40:	f5 07       	cpc	r31, r21
    1c42:	20 f0       	brcs	.+8      	; 0x1c4c <__udivmodsi4_ep>
    1c44:	a2 1b       	sub	r26, r18
    1c46:	b3 0b       	sbc	r27, r19
    1c48:	e4 0b       	sbc	r30, r20
    1c4a:	f5 0b       	sbc	r31, r21

00001c4c <__udivmodsi4_ep>:
    1c4c:	66 1f       	adc	r22, r22
    1c4e:	77 1f       	adc	r23, r23
    1c50:	88 1f       	adc	r24, r24
    1c52:	99 1f       	adc	r25, r25
    1c54:	1a 94       	dec	r1
    1c56:	69 f7       	brne	.-38     	; 0x1c32 <__udivmodsi4_loop>
    1c58:	60 95       	com	r22
    1c5a:	70 95       	com	r23
    1c5c:	80 95       	com	r24
    1c5e:	90 95       	com	r25
    1c60:	9b 01       	movw	r18, r22
    1c62:	ac 01       	movw	r20, r24
    1c64:	bd 01       	movw	r22, r26
    1c66:	cf 01       	movw	r24, r30
    1c68:	08 95       	ret

00001c6a <_exit>:
    1c6a:	f8 94       	cli

00001c6c <__stop_program>:
    1c6c:	ff cf       	rjmp	.-2      	; 0x1c6c <__stop_program>
